import { Range } from '../core/range.js';
import { ITextModel } from '../model.js';
import { TokenUpdate } from './tokenStore.js';
export interface ITreeSitterTokenizationStoreService {
    readonly _serviceBrand: undefined;
    setTokens(model: ITextModel, tokens: TokenUpdate[]): void;
    getTokens(model: ITextModel, line: number): Uint32Array | undefined;
    updateTokens(model: ITextModel, version: number, updates: {
        oldRangeLength: number;
        newTokens: TokenUpdate[];
    }[]): void;
    markForRefresh(model: ITextModel, range: Range): void;
    getNeedsRefresh(model: ITextModel): {
        range: Range;
        startOffset: number;
        endOffset: number;
    }[];
    hasTokens(model: ITextModel, accurateForRange?: Range): boolean;
}
export declare const ITreeSitterTokenizationStoreService: import("../../../platform/instantiation/common/instantiation.js").ServiceIdentifier<ITreeSitterTokenizationStoreService>;
