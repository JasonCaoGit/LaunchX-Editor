{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/editor/common/services/markerDecorations.ts","vs/editor/common/services/markerDecorations.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAGhG,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;AAO1F,MAAM,CAAC,MAAM,yBAAyB,GAAG,eAAe,CAA4B,0BAA0B,CAAC,CAAC","file":"markerDecorations.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITextModel, IModelDecoration } from '../model.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IMarker } from '../../../platform/markers/common/markers.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Range } from '../core/range.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\n\nexport const IMarkerDecorationsService = createDecorator<IMarkerDecorationsService>('markerDecorationsService');\n\nexport interface IMarkerDecorationsService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeMarker: Event<ITextModel>;\n\n\tgetMarker(uri: URI, decoration: IModelDecoration): IMarker | null;\n\n\tgetLiveMarkers(uri: URI): [Range, IMarker][];\n\n\taddMarkerSuppression(uri: URI, range: Range): IDisposable;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITextModel, IModelDecoration } from '../model.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IMarker } from '../../../platform/markers/common/markers.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Range } from '../core/range.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\n\nexport const IMarkerDecorationsService = createDecorator<IMarkerDecorationsService>('markerDecorationsService');\n\nexport interface IMarkerDecorationsService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeMarker: Event<ITextModel>;\n\n\tgetMarker(uri: URI, decoration: IModelDecoration): IMarker | null;\n\n\tgetLiveMarkers(uri: URI): [Range, IMarker][];\n\n\taddMarkerSuppression(uri: URI, range: Range): IDisposable;\n}\n"]}