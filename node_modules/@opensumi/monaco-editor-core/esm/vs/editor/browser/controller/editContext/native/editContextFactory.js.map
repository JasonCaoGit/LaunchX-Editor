{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/editor/browser/controller/editContext/native/editContextFactory.ts","vs/editor/browser/controller/editContext/native/editContextFactory.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAGhG,MAAM,KAAW,WAAW,CAe3B;AAfD,WAAiB,WAAW;IAE3B;;OAEG;IACH,SAAgB,SAAS,CAAC,GAAiB;QAC1C,OAAO,OAAO,GAAG,EAAE,WAAW,KAAK,UAAU,CAAC;IAC/C,CAAC;IAFe,qBAAS,YAExB,CAAA;IAED;;OAEG;IACH,SAAgB,MAAM,CAAC,MAAc,EAAE,OAAyB;QAC/D,OAAO,IAAK,MAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAFe,kBAAM,SAErB,CAAA;AACF,CAAC,EAfgB,WAAW,KAAX,WAAW,QAe3B","file":"editContextFactory.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nexport namespace EditContext {\n\n\t/**\n\t * Checks if the EditContext is supported in the given window.\n\t */\n\texport function supported(obj: any & Window): boolean {\n\t\treturn typeof obj?.EditContext === 'function';\n\t}\n\n\t/**\n\t * Create an edit context. Check that the EditContext is supported using the method {@link EditContext.supported}\n\t */\n\texport function create(window: Window, options?: EditContextInit): EditContext {\n\t\treturn new (window as any).EditContext(options);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nexport namespace EditContext {\n\n\t/**\n\t * Checks if the EditContext is supported in the given window.\n\t */\n\texport function supported(obj: any & Window): boolean {\n\t\treturn typeof obj?.EditContext === 'function';\n\t}\n\n\t/**\n\t * Create an edit context. Check that the EditContext is supported using the method {@link EditContext.supported}\n\t */\n\texport function create(window: Window, options?: EditContextInit): EditContext {\n\t\treturn new (window as any).EditContext(options);\n\t}\n}\n"]}