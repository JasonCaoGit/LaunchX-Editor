{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/editor/browser/rect.ts","vs/editor/browser/rect.ts"],"names":[],"mappings":"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","file":"rect.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError } from '../../base/common/errors.js';\nimport { OffsetRange } from '../common/core/offsetRange.js';\nimport { Point } from './point.js';\n\nexport class Rect {\n\tpublic static fromPoint(point: Point): Rect {\n\t\treturn new Rect(point.x, point.y, point.x, point.y);\n\t}\n\n\tpublic static fromLeftTopRightBottom(left: number, top: number, right: number, bottom: number): Rect {\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tpublic static fromLeftTopWidthHeight(left: number, top: number, width: number, height: number): Rect {\n\t\treturn new Rect(left, top, left + width, top + height);\n\t}\n\n\tpublic static fromRanges(leftRight: OffsetRange, topBottom: OffsetRange): Rect {\n\t\treturn new Rect(leftRight.start, topBottom.start, leftRight.endExclusive, topBottom.endExclusive);\n\t}\n\n\tpublic static hull(rects: Rect[]): Rect {\n\t\tlet left = Number.MAX_SAFE_INTEGER;\n\t\tlet top = Number.MAX_SAFE_INTEGER;\n\t\tlet right = Number.MIN_SAFE_INTEGER;\n\t\tlet bottom = Number.MIN_SAFE_INTEGER;\n\n\t\tfor (const rect of rects) {\n\t\t\tleft = Math.min(left, rect.left);\n\t\t\ttop = Math.min(top, rect.top);\n\t\t\tright = Math.max(right, rect.right);\n\t\t\tbottom = Math.max(bottom, rect.bottom);\n\t\t}\n\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tpublic readonly width = this.right - this.left;\n\tpublic readonly height = this.bottom - this.top;\n\n\tconstructor(\n\t\tpublic readonly left: number,\n\t\tpublic readonly top: number,\n\t\tpublic readonly right: number,\n\t\tpublic readonly bottom: number,\n\t) {\n\t\tif (left > right || top > bottom) {\n\t\t\tthrow new BugIndicatingError('Invalid arguments');\n\t\t}\n\t}\n\n\twithMargin(margin: number): Rect {\n\t\treturn new Rect(this.left - margin, this.top - margin, this.right + margin, this.bottom + margin);\n\t}\n\n\tintersectVertical(range: OffsetRange): Rect {\n\t\treturn new Rect(\n\t\t\tthis.left,\n\t\t\tMath.max(this.top, range.start),\n\t\t\tthis.right,\n\t\t\tMath.min(this.bottom, range.endExclusive),\n\t\t);\n\t}\n\n\ttoString(): string {\n\t\treturn `Rect{(${this.left},${this.top}), (${this.right},${this.bottom})}`;\n\t}\n\n\tintersect(parent: Rect): Rect | undefined {\n\t\tconst left = Math.max(this.left, parent.left);\n\t\tconst right = Math.min(this.right, parent.right);\n\t\tconst top = Math.max(this.top, parent.top);\n\t\tconst bottom = Math.min(this.bottom, parent.bottom);\n\n\t\tif (left > right || top > bottom) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tunion(other: Rect): Rect {\n\t\treturn new Rect(\n\t\t\tMath.min(this.left, other.left),\n\t\t\tMath.min(this.top, other.top),\n\t\t\tMath.max(this.right, other.right),\n\t\t\tMath.max(this.bottom, other.bottom),\n\t\t);\n\t}\n\n\tcontainsRect(other: Rect): boolean {\n\t\treturn this.left <= other.left\n\t\t\t&& this.top <= other.top\n\t\t\t&& this.right >= other.right\n\t\t\t&& this.bottom >= other.bottom;\n\t}\n\n\tmoveToBeContainedIn(parent: Rect): Rect {\n\t\tconst width = this.width;\n\t\tconst height = this.height;\n\n\t\tlet left = this.left;\n\t\tlet top = this.top;\n\n\t\tif (left < parent.left) {\n\t\t\tleft = parent.left;\n\t\t} else if (left + width > parent.right) {\n\t\t\tleft = parent.right - width;\n\t\t}\n\n\t\tif (top < parent.top) {\n\t\t\ttop = parent.top;\n\t\t} else if (top + height > parent.bottom) {\n\t\t\ttop = parent.bottom - height;\n\t\t}\n\n\t\treturn new Rect(left, top, left + width, top + height);\n\t}\n\n\twithWidth(width: number): Rect {\n\t\treturn new Rect(this.left, this.top, this.left + width, this.bottom);\n\t}\n\n\twithHeight(height: number): Rect {\n\t\treturn new Rect(this.left, this.top, this.right, this.top + height);\n\t}\n\n\twithTop(top: number): Rect {\n\t\treturn new Rect(this.left, top, this.right, this.bottom);\n\t}\n\n\tmoveLeft(delta: number): Rect {\n\t\treturn new Rect(this.left - delta, this.top, this.right - delta, this.bottom);\n\t}\n\n\tmoveRight(delta: number): Rect {\n\t\treturn new Rect(this.left + delta, this.top, this.right + delta, this.bottom);\n\t}\n\n\tmoveUp(delta: number): Rect {\n\t\treturn new Rect(this.left, this.top - delta, this.right, this.bottom - delta);\n\t}\n\n\tmoveDown(delta: number): Rect {\n\t\treturn new Rect(this.left, this.top + delta, this.right, this.bottom + delta);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError } from '../../base/common/errors.js';\nimport { OffsetRange } from '../common/core/offsetRange.js';\nimport { Point } from './point.js';\n\nexport class Rect {\n\tpublic static fromPoint(point: Point): Rect {\n\t\treturn new Rect(point.x, point.y, point.x, point.y);\n\t}\n\n\tpublic static fromLeftTopRightBottom(left: number, top: number, right: number, bottom: number): Rect {\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tpublic static fromLeftTopWidthHeight(left: number, top: number, width: number, height: number): Rect {\n\t\treturn new Rect(left, top, left + width, top + height);\n\t}\n\n\tpublic static fromRanges(leftRight: OffsetRange, topBottom: OffsetRange): Rect {\n\t\treturn new Rect(leftRight.start, topBottom.start, leftRight.endExclusive, topBottom.endExclusive);\n\t}\n\n\tpublic static hull(rects: Rect[]): Rect {\n\t\tlet left = Number.MAX_SAFE_INTEGER;\n\t\tlet top = Number.MAX_SAFE_INTEGER;\n\t\tlet right = Number.MIN_SAFE_INTEGER;\n\t\tlet bottom = Number.MIN_SAFE_INTEGER;\n\n\t\tfor (const rect of rects) {\n\t\t\tleft = Math.min(left, rect.left);\n\t\t\ttop = Math.min(top, rect.top);\n\t\t\tright = Math.max(right, rect.right);\n\t\t\tbottom = Math.max(bottom, rect.bottom);\n\t\t}\n\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tpublic readonly width = this.right - this.left;\n\tpublic readonly height = this.bottom - this.top;\n\n\tconstructor(\n\t\tpublic readonly left: number,\n\t\tpublic readonly top: number,\n\t\tpublic readonly right: number,\n\t\tpublic readonly bottom: number,\n\t) {\n\t\tif (left > right || top > bottom) {\n\t\t\tthrow new BugIndicatingError('Invalid arguments');\n\t\t}\n\t}\n\n\twithMargin(margin: number): Rect {\n\t\treturn new Rect(this.left - margin, this.top - margin, this.right + margin, this.bottom + margin);\n\t}\n\n\tintersectVertical(range: OffsetRange): Rect {\n\t\treturn new Rect(\n\t\t\tthis.left,\n\t\t\tMath.max(this.top, range.start),\n\t\t\tthis.right,\n\t\t\tMath.min(this.bottom, range.endExclusive),\n\t\t);\n\t}\n\n\ttoString(): string {\n\t\treturn `Rect{(${this.left},${this.top}), (${this.right},${this.bottom})}`;\n\t}\n\n\tintersect(parent: Rect): Rect | undefined {\n\t\tconst left = Math.max(this.left, parent.left);\n\t\tconst right = Math.min(this.right, parent.right);\n\t\tconst top = Math.max(this.top, parent.top);\n\t\tconst bottom = Math.min(this.bottom, parent.bottom);\n\n\t\tif (left > right || top > bottom) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new Rect(left, top, right, bottom);\n\t}\n\n\tunion(other: Rect): Rect {\n\t\treturn new Rect(\n\t\t\tMath.min(this.left, other.left),\n\t\t\tMath.min(this.top, other.top),\n\t\t\tMath.max(this.right, other.right),\n\t\t\tMath.max(this.bottom, other.bottom),\n\t\t);\n\t}\n\n\tcontainsRect(other: Rect): boolean {\n\t\treturn this.left <= other.left\n\t\t\t&& this.top <= other.top\n\t\t\t&& this.right >= other.right\n\t\t\t&& this.bottom >= other.bottom;\n\t}\n\n\tmoveToBeContainedIn(parent: Rect): Rect {\n\t\tconst width = this.width;\n\t\tconst height = this.height;\n\n\t\tlet left = this.left;\n\t\tlet top = this.top;\n\n\t\tif (left < parent.left) {\n\t\t\tleft = parent.left;\n\t\t} else if (left + width > parent.right) {\n\t\t\tleft = parent.right - width;\n\t\t}\n\n\t\tif (top < parent.top) {\n\t\t\ttop = parent.top;\n\t\t} else if (top + height > parent.bottom) {\n\t\t\ttop = parent.bottom - height;\n\t\t}\n\n\t\treturn new Rect(left, top, left + width, top + height);\n\t}\n\n\twithWidth(width: number): Rect {\n\t\treturn new Rect(this.left, this.top, this.left + width, this.bottom);\n\t}\n\n\twithHeight(height: number): Rect {\n\t\treturn new Rect(this.left, this.top, this.right, this.top + height);\n\t}\n\n\twithTop(top: number): Rect {\n\t\treturn new Rect(this.left, top, this.right, this.bottom);\n\t}\n\n\tmoveLeft(delta: number): Rect {\n\t\treturn new Rect(this.left - delta, this.top, this.right - delta, this.bottom);\n\t}\n\n\tmoveRight(delta: number): Rect {\n\t\treturn new Rect(this.left + delta, this.top, this.right + delta, this.bottom);\n\t}\n\n\tmoveUp(delta: number): Rect {\n\t\treturn new Rect(this.left, this.top - delta, this.right, this.bottom - delta);\n\t}\n\n\tmoveDown(delta: number): Rect {\n\t\treturn new Rect(this.left, this.top + delta, this.right, this.bottom + delta);\n\t}\n}\n"]}