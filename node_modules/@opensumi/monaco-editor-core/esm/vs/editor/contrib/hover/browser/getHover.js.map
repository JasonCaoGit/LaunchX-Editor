{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/editor/contrib/hover/browser/getHover.ts","vs/editor/contrib/hover/browser/getHover.ts"],"names":[],"mappings":"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","file":"getHover.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { Hover, HoverProvider } from '../../../common/languages.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\n\nexport class HoverProviderResult {\n\tconstructor(\n\t\tpublic readonly provider: HoverProvider,\n\t\tpublic readonly hover: Hover,\n\t\tpublic readonly ordinal: number\n\t) { }\n}\n\n/**\n * Does not throw or return a rejected promise (returns undefined instead).\n */\nasync function executeProvider(provider: HoverProvider, ordinal: number, model: ITextModel, position: Position, token: CancellationToken): Promise<HoverProviderResult | undefined> {\n\tconst result = await Promise\n\t\t.resolve(provider.provideHover(model, position, token))\n\t\t.catch(onUnexpectedExternalError);\n\tif (!result || !isValid(result)) {\n\t\treturn undefined;\n\t}\n\treturn new HoverProviderResult(provider, result, ordinal);\n}\n\nexport function getHoverProviderResultsAsAsyncIterable(registry: LanguageFeatureRegistry<HoverProvider>, model: ITextModel, position: Position, token: CancellationToken, recursive = false): AsyncIterableObject<HoverProviderResult> {\n\tconst providers = registry.ordered(model, recursive);\n\tconst promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n\treturn AsyncIterableObject.fromPromisesResolveOrder(promises).coalesce();\n}\n\nexport function getHoversPromise(registry: LanguageFeatureRegistry<HoverProvider>, model: ITextModel, position: Position, token: CancellationToken, recursive = false): Promise<Hover[]> {\n\treturn getHoverProviderResultsAsAsyncIterable(registry, model, position, token, recursive).map(item => item.hover).toPromise();\n}\n\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position): Promise<Hover[]> => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\treturn getHoversPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\n\nregisterModelAndPositionCommand('_executeHoverProvider_recursive', (accessor, model, position): Promise<Hover[]> => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\treturn getHoversPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None, true);\n});\n\nfunction isValid(result: Hover) {\n\tconst hasRange = (typeof result.range !== 'undefined');\n\tconst hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n\treturn hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { Hover, HoverProvider } from '../../../common/languages.js';\nimport { LanguageFeatureRegistry } from '../../../common/languageFeatureRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\n\nexport class HoverProviderResult {\n\tconstructor(\n\t\tpublic readonly provider: HoverProvider,\n\t\tpublic readonly hover: Hover,\n\t\tpublic readonly ordinal: number\n\t) { }\n}\n\n/**\n * Does not throw or return a rejected promise (returns undefined instead).\n */\nasync function executeProvider(provider: HoverProvider, ordinal: number, model: ITextModel, position: Position, token: CancellationToken): Promise<HoverProviderResult | undefined> {\n\tconst result = await Promise\n\t\t.resolve(provider.provideHover(model, position, token))\n\t\t.catch(onUnexpectedExternalError);\n\tif (!result || !isValid(result)) {\n\t\treturn undefined;\n\t}\n\treturn new HoverProviderResult(provider, result, ordinal);\n}\n\nexport function getHoverProviderResultsAsAsyncIterable(registry: LanguageFeatureRegistry<HoverProvider>, model: ITextModel, position: Position, token: CancellationToken, recursive = false): AsyncIterableObject<HoverProviderResult> {\n\tconst providers = registry.ordered(model, recursive);\n\tconst promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n\treturn AsyncIterableObject.fromPromisesResolveOrder(promises).coalesce();\n}\n\nexport function getHoversPromise(registry: LanguageFeatureRegistry<HoverProvider>, model: ITextModel, position: Position, token: CancellationToken, recursive = false): Promise<Hover[]> {\n\treturn getHoverProviderResultsAsAsyncIterable(registry, model, position, token, recursive).map(item => item.hover).toPromise();\n}\n\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position): Promise<Hover[]> => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\treturn getHoversPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\n\nregisterModelAndPositionCommand('_executeHoverProvider_recursive', (accessor, model, position): Promise<Hover[]> => {\n\tconst languageFeaturesService = accessor.get(ILanguageFeaturesService);\n\treturn getHoversPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None, true);\n});\n\nfunction isValid(result: Hover) {\n\tconst hasRange = (typeof result.range !== 'undefined');\n\tconst hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n\treturn hasRange && hasHtmlContent;\n}\n"]}