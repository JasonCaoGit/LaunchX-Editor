{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/deletionView.ts","vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/deletionView.ts"],"names":[],"mappings":"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","file":"deletionView.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { IObservable, constObservable, derived, derivedObservableWithCache } from '../../../../../../base/common/observable.js';\nimport { ICodeEditor } from '../../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../browser/point.js';\nimport { LineRange } from '../../../../../common/core/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { IInlineEditsView } from './sideBySideDiff.js';\nimport { createRectangle, getPrefixTrim, mapOutFalsy, maxContentWidthInRange, n } from './utils.js';\nimport { InlineEditWithChanges } from './viewAndDiffProducer.js';\n\nexport class InlineEditsDeletionView extends Disposable implements IInlineEditsView {\n\tprivate readonly _editorObs = observableCodeEditor(this._editor);\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\tprivate readonly _uiState: IObservable<{\n\t\t\toriginalRange: LineRange;\n\t\t\tdeletions: Range[];\n\t\t} | undefined>,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._nonOverflowView.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derived(reader => {\n\t\t\t\tconst info = this._editorLayoutInfo.read(reader);\n\t\t\t\tif (info === null) { return 0; }\n\t\t\t\treturn info.code1.x - info.codeStart1.x;\n\t\t\t}),\n\t\t}));\n\t}\n\n\tprivate readonly _display = derived(this, reader => !!this._uiState.read(reader) ? 'block' : 'none');\n\n\tprivate readonly _originalStartPosition = derived(this, (reader) => {\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.startLineNumber, 1) : null;\n\t});\n\n\tprivate readonly _originalEndPosition = derived(this, (reader) => {\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.endLineNumberExclusive, 1) : null;\n\t});\n\n\tprivate readonly _originalVerticalStartPosition = this._editorObs.observePosition(this._originalStartPosition, this._store).map(p => p?.y);\n\tprivate readonly _originalVerticalEndPosition = this._editorObs.observePosition(this._originalEndPosition, this._store).map(p => p?.y);\n\n\tprivate readonly _originalDisplayRange = this._uiState.map(s => s?.originalRange);\n\tprivate readonly _editorMaxContentWidthInRange = derived(this, reader => {\n\t\tconst originalDisplayRange = this._originalDisplayRange.read(reader);\n\t\tif (!originalDisplayRange) {\n\t\t\treturn constObservable(0);\n\t\t}\n\t\tthis._editorObs.versionId.read(reader);\n\n\t\t// Take the max value that we observed.\n\t\t// Reset when either the edit changes or the editor text version.\n\t\treturn derivedObservableWithCache<number>(this, (reader, lastValue) => {\n\t\t\tconst maxWidth = maxContentWidthInRange(this._editorObs, originalDisplayRange, reader);\n\t\t\treturn Math.max(maxWidth, lastValue ?? 0);\n\t\t});\n\t}).map((v, r) => v.read(r));\n\n\tprivate readonly _maxPrefixTrim = derived(reader => {\n\t\tconst state = this._uiState.read(reader);\n\t\tif (!state) {\n\t\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t\t}\n\t\treturn getPrefixTrim(state.deletions, state.originalRange, [], this._editor);\n\t});\n\n\tprivate readonly _editorLayoutInfo = derived(this, (reader) => {\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\tif (!inlineEdit) {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this._uiState.read(reader);\n\t\tif (!state) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editorLayout = this._editorObs.layoutInfo.read(reader);\n\t\tconst horizontalScrollOffset = this._editorObs.scrollLeft.read(reader);\n\n\t\tconst left = editorLayout.contentLeft + this._editorMaxContentWidthInRange.read(reader) - horizontalScrollOffset;\n\n\t\tconst range = inlineEdit.originalLineRange;\n\t\tconst selectionTop = this._originalVerticalStartPosition.read(reader) ?? this._editor.getTopForLineNumber(range.startLineNumber) - this._editorObs.scrollTop.read(reader);\n\t\tconst selectionBottom = this._originalVerticalEndPosition.read(reader) ?? this._editor.getTopForLineNumber(range.endLineNumberExclusive) - this._editorObs.scrollTop.read(reader);\n\n\t\tconst codeLeft = editorLayout.contentLeft + this._maxPrefixTrim.read(reader).prefixLeftOffset;\n\n\t\tif (left <= codeLeft) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst code1 = new Point(left, selectionTop);\n\t\tconst codeStart1 = new Point(codeLeft, selectionTop);\n\t\tconst code2 = new Point(left, selectionBottom);\n\t\tconst codeStart2 = new Point(codeLeft, selectionBottom);\n\t\tconst codeHeight = selectionBottom - selectionTop;\n\n\t\treturn {\n\t\t\tcode1,\n\t\t\tcodeStart1,\n\t\t\tcode2,\n\t\t\tcodeStart2,\n\t\t\tcodeHeight,\n\t\t\thorizontalScrollOffset,\n\t\t\tpadding: 3,\n\t\t\tborderRadius: 4,\n\t\t};\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\tprivate readonly _foregroundSvg = n.svg({\n\t\ttransform: 'translate(-0.5 -0.5)',\n\t\tstyle: { overflow: 'visible', pointerEvents: 'none', position: 'absolute' },\n\t}, derived(reader => {\n\t\tconst layoutInfoObs = mapOutFalsy(this._editorLayoutInfo).read(reader);\n\t\tif (!layoutInfoObs) { return undefined; }\n\n\t\tconst layoutInfo = layoutInfoObs.read(reader);\n\n\t\t// TODO: look into why 1px offset is needed\n\t\tconst rectangleOverlay = createRectangle(\n\t\t\t{\n\t\t\t\ttopLeft: layoutInfo.codeStart1,\n\t\t\t\twidth: layoutInfo.code1.x - layoutInfo.codeStart1.x + 1,\n\t\t\t\theight: layoutInfo.code2.y - layoutInfo.code1.y + 1,\n\t\t\t},\n\t\t\tlayoutInfo.padding,\n\t\t\tlayoutInfo.borderRadius,\n\t\t\t{ hideLeft: layoutInfo.horizontalScrollOffset !== 0 }\n\t\t);\n\n\t\treturn [\n\t\t\tn.svgElem('path', {\n\t\t\t\tclass: 'originalOverlay',\n\t\t\t\td: rectangleOverlay,\n\t\t\t\tstyle: {\n\t\t\t\t\tfill: 'var(--vscode-inlineEdit-originalBackground, transparent)',\n\t\t\t\t\tstroke: 'var(--vscode-inlineEdit-originalBorder)',\n\t\t\t\t\tstrokeWidth: '1px',\n\t\t\t\t}\n\t\t\t}),\n\t\t];\n\t})).keepUpdated(this._store);\n\n\tprivate readonly _nonOverflowView = n.div({\n\t\tclass: 'inline-edits-view',\n\t\tstyle: {\n\t\t\tposition: 'absolute',\n\t\t\toverflow: 'visible',\n\t\t\ttop: '0px',\n\t\t\tleft: '0px',\n\t\t\tzIndex: '0',\n\t\t\tdisplay: this._display,\n\t\t},\n\t}, [\n\t\t[this._foregroundSvg],\n\t]).keepUpdated(this._store);\n\n\treadonly isHovered = constObservable(false);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { IObservable, constObservable, derived, derivedObservableWithCache } from '../../../../../../base/common/observable.js';\nimport { ICodeEditor } from '../../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../browser/point.js';\nimport { LineRange } from '../../../../../common/core/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { IInlineEditsView } from './sideBySideDiff.js';\nimport { createRectangle, getPrefixTrim, mapOutFalsy, maxContentWidthInRange, n } from './utils.js';\nimport { InlineEditWithChanges } from './viewAndDiffProducer.js';\n\nexport class InlineEditsDeletionView extends Disposable implements IInlineEditsView {\n\tprivate readonly _editorObs = observableCodeEditor(this._editor);\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\tprivate readonly _uiState: IObservable<{\n\t\t\toriginalRange: LineRange;\n\t\t\tdeletions: Range[];\n\t\t} | undefined>,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._nonOverflowView.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derived(reader => {\n\t\t\t\tconst info = this._editorLayoutInfo.read(reader);\n\t\t\t\tif (info === null) { return 0; }\n\t\t\t\treturn info.code1.x - info.codeStart1.x;\n\t\t\t}),\n\t\t}));\n\t}\n\n\tprivate readonly _display = derived(this, reader => !!this._uiState.read(reader) ? 'block' : 'none');\n\n\tprivate readonly _originalStartPosition = derived(this, (reader) => {\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.startLineNumber, 1) : null;\n\t});\n\n\tprivate readonly _originalEndPosition = derived(this, (reader) => {\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.endLineNumberExclusive, 1) : null;\n\t});\n\n\tprivate readonly _originalVerticalStartPosition = this._editorObs.observePosition(this._originalStartPosition, this._store).map(p => p?.y);\n\tprivate readonly _originalVerticalEndPosition = this._editorObs.observePosition(this._originalEndPosition, this._store).map(p => p?.y);\n\n\tprivate readonly _originalDisplayRange = this._uiState.map(s => s?.originalRange);\n\tprivate readonly _editorMaxContentWidthInRange = derived(this, reader => {\n\t\tconst originalDisplayRange = this._originalDisplayRange.read(reader);\n\t\tif (!originalDisplayRange) {\n\t\t\treturn constObservable(0);\n\t\t}\n\t\tthis._editorObs.versionId.read(reader);\n\n\t\t// Take the max value that we observed.\n\t\t// Reset when either the edit changes or the editor text version.\n\t\treturn derivedObservableWithCache<number>(this, (reader, lastValue) => {\n\t\t\tconst maxWidth = maxContentWidthInRange(this._editorObs, originalDisplayRange, reader);\n\t\t\treturn Math.max(maxWidth, lastValue ?? 0);\n\t\t});\n\t}).map((v, r) => v.read(r));\n\n\tprivate readonly _maxPrefixTrim = derived(reader => {\n\t\tconst state = this._uiState.read(reader);\n\t\tif (!state) {\n\t\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t\t}\n\t\treturn getPrefixTrim(state.deletions, state.originalRange, [], this._editor);\n\t});\n\n\tprivate readonly _editorLayoutInfo = derived(this, (reader) => {\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\tif (!inlineEdit) {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this._uiState.read(reader);\n\t\tif (!state) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editorLayout = this._editorObs.layoutInfo.read(reader);\n\t\tconst horizontalScrollOffset = this._editorObs.scrollLeft.read(reader);\n\n\t\tconst left = editorLayout.contentLeft + this._editorMaxContentWidthInRange.read(reader) - horizontalScrollOffset;\n\n\t\tconst range = inlineEdit.originalLineRange;\n\t\tconst selectionTop = this._originalVerticalStartPosition.read(reader) ?? this._editor.getTopForLineNumber(range.startLineNumber) - this._editorObs.scrollTop.read(reader);\n\t\tconst selectionBottom = this._originalVerticalEndPosition.read(reader) ?? this._editor.getTopForLineNumber(range.endLineNumberExclusive) - this._editorObs.scrollTop.read(reader);\n\n\t\tconst codeLeft = editorLayout.contentLeft + this._maxPrefixTrim.read(reader).prefixLeftOffset;\n\n\t\tif (left <= codeLeft) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst code1 = new Point(left, selectionTop);\n\t\tconst codeStart1 = new Point(codeLeft, selectionTop);\n\t\tconst code2 = new Point(left, selectionBottom);\n\t\tconst codeStart2 = new Point(codeLeft, selectionBottom);\n\t\tconst codeHeight = selectionBottom - selectionTop;\n\n\t\treturn {\n\t\t\tcode1,\n\t\t\tcodeStart1,\n\t\t\tcode2,\n\t\t\tcodeStart2,\n\t\t\tcodeHeight,\n\t\t\thorizontalScrollOffset,\n\t\t\tpadding: 3,\n\t\t\tborderRadius: 4,\n\t\t};\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\tprivate readonly _foregroundSvg = n.svg({\n\t\ttransform: 'translate(-0.5 -0.5)',\n\t\tstyle: { overflow: 'visible', pointerEvents: 'none', position: 'absolute' },\n\t}, derived(reader => {\n\t\tconst layoutInfoObs = mapOutFalsy(this._editorLayoutInfo).read(reader);\n\t\tif (!layoutInfoObs) { return undefined; }\n\n\t\tconst layoutInfo = layoutInfoObs.read(reader);\n\n\t\t// TODO: look into why 1px offset is needed\n\t\tconst rectangleOverlay = createRectangle(\n\t\t\t{\n\t\t\t\ttopLeft: layoutInfo.codeStart1,\n\t\t\t\twidth: layoutInfo.code1.x - layoutInfo.codeStart1.x + 1,\n\t\t\t\theight: layoutInfo.code2.y - layoutInfo.code1.y + 1,\n\t\t\t},\n\t\t\tlayoutInfo.padding,\n\t\t\tlayoutInfo.borderRadius,\n\t\t\t{ hideLeft: layoutInfo.horizontalScrollOffset !== 0 }\n\t\t);\n\n\t\treturn [\n\t\t\tn.svgElem('path', {\n\t\t\t\tclass: 'originalOverlay',\n\t\t\t\td: rectangleOverlay,\n\t\t\t\tstyle: {\n\t\t\t\t\tfill: 'var(--vscode-inlineEdit-originalBackground, transparent)',\n\t\t\t\t\tstroke: 'var(--vscode-inlineEdit-originalBorder)',\n\t\t\t\t\tstrokeWidth: '1px',\n\t\t\t\t}\n\t\t\t}),\n\t\t];\n\t})).keepUpdated(this._store);\n\n\tprivate readonly _nonOverflowView = n.div({\n\t\tclass: 'inline-edits-view',\n\t\tstyle: {\n\t\t\tposition: 'absolute',\n\t\t\toverflow: 'visible',\n\t\t\ttop: '0px',\n\t\t\tleft: '0px',\n\t\t\tzIndex: '0',\n\t\t\tdisplay: this._display,\n\t\t},\n\t}, [\n\t\t[this._foregroundSvg],\n\t]).keepUpdated(this._store);\n\n\treadonly isHovered = constObservable(false);\n}\n"]}