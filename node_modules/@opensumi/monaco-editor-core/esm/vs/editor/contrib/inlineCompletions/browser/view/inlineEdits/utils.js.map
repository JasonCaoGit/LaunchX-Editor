{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/utils.ts","vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, h, isSVGElement } from '../../../../../../base/browser/dom.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { numberComparator } from '../../../../../../base/common/arrays.js';\nimport { findFirstMin } from '../../../../../../base/common/arraysFind.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { DisposableStore, IDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { derived, derivedObservableWithCache, IObservable, IReader, observableValue } from '../../../../../../base/common/observable.js';\nimport { OS } from '../../../../../../base/common/platform.js';\nimport { getIndentationLength, splitLines } from '../../../../../../base/common/strings.js';\nimport { MenuEntryActionViewItem } from '../../../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { ICodeEditor } from '../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../browser/point.js';\nimport { Rect } from '../../../../../browser/rect.js';\nimport { EditorOption } from '../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../../../common/core/offsetRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { SingleTextEdit, TextEdit } from '../../../../../common/core/textEdit.js';\nimport { RangeMapping } from '../../../../../common/diff/rangeMapping.js';\nimport { indentOfLine } from '../../../../../common/model/textModel.js';\n\nexport function maxContentWidthInRange(editor: ObservableCodeEditor, range: LineRange, reader: IReader | undefined): number {\n\teditor.layoutInfo.read(reader);\n\teditor.value.read(reader);\n\n\tconst model = editor.model.read(reader);\n\tif (!model) { return 0; }\n\tlet maxContentWidth = 0;\n\n\teditor.scrollTop.read(reader);\n\tfor (let i = range.startLineNumber; i < range.endLineNumberExclusive; i++) {\n\t\tconst column = model.getLineMaxColumn(i);\n\t\tlet lineContentWidth = editor.editor.getOffsetForColumn(i, column);\n\t\tif (lineContentWidth === -1) {\n\t\t\t// approximation\n\t\t\tconst typicalHalfwidthCharacterWidth = editor.editor.getOption(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\t\tconst approximation = column * typicalHalfwidthCharacterWidth;\n\t\t\tlineContentWidth = approximation;\n\t\t}\n\t\tmaxContentWidth = Math.max(maxContentWidth, lineContentWidth);\n\t}\n\tconst lines = range.mapToLineArray(l => model.getLineContent(l));\n\n\tif (maxContentWidth < 5 && lines.some(l => l.length > 0) && model.uri.scheme !== 'file') {\n\t\tconsole.error('unexpected width');\n\t}\n\treturn maxContentWidth;\n}\n\nexport function getOffsetForPos(editor: ObservableCodeEditor, pos: Position, reader: IReader): number {\n\teditor.layoutInfo.read(reader);\n\teditor.value.read(reader);\n\n\tconst model = editor.model.read(reader);\n\tif (!model) { return 0; }\n\n\teditor.scrollTop.read(reader);\n\tconst lineContentWidth = editor.editor.getOffsetForColumn(pos.lineNumber, pos.column);\n\n\treturn lineContentWidth;\n}\n\nexport function getPrefixTrim(diffRanges: Range[], originalLinesRange: LineRange, modifiedLines: string[], editor: ICodeEditor): { prefixTrim: number; prefixLeftOffset: number } {\n\tconst textModel = editor.getModel();\n\tif (!textModel) {\n\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t}\n\n\tconst replacementStart = diffRanges.map(r => r.isSingleLine() ? r.startColumn - 1 : 0);\n\tconst originalIndents = originalLinesRange.mapToLineArray(line => indentOfLine(textModel.getLineContent(line)));\n\tconst modifiedIndents = modifiedLines.map(line => indentOfLine(line));\n\tconst prefixTrim = Math.min(...replacementStart, ...originalIndents, ...modifiedIndents);\n\n\tconst prefixLeftOffset = editor.getOffsetForColumn(originalLinesRange.startLineNumber, prefixTrim + 1);\n\n\treturn { prefixTrim, prefixLeftOffset };\n}\n\nexport class StatusBarViewItem extends MenuEntryActionViewItem {\n\tprotected readonly _updateLabelListener = this._register(this._contextKeyService.onDidChangeContext(() => {\n\t\tthis.updateLabel();\n\t}));\n\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService, true);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst div = h('div.keybinding').root;\n\t\t\tconst keybindingLabel = this._register(new KeybindingLabel(div, OS, { disableTitle: true, ...unthemedKeybindingLabelOptions }));\n\t\t\tkeybindingLabel.set(kb);\n\t\t\tthis.label.textContent = this._action.label;\n\t\t\tthis.label.appendChild(div);\n\t\t\tthis.label.classList.add('inlineSuggestionStatusBarItemLabel');\n\t\t}\n\t}\n\n\tprotected override updateTooltip(): void {\n\t\t// NOOP, disable tooltip\n\t}\n}\nexport function applyEditToModifiedRangeMappings(rangeMapping: RangeMapping[], edit: TextEdit): RangeMapping[] {\n\tconst updatedMappings: RangeMapping[] = [];\n\tfor (const m of rangeMapping) {\n\t\tconst updatedRange = edit.mapRange(m.modifiedRange);\n\t\tupdatedMappings.push(new RangeMapping(m.originalRange, updatedRange));\n\t}\n\treturn updatedMappings;\n}\n\n\nexport function classNames(...classes: (string | false | undefined | null)[]) {\n\treturn classes.filter(c => typeof c === 'string').join(' ');\n}\n\nfunction offsetRangeToRange(columnOffsetRange: OffsetRange, startPos: Position): Range {\n\treturn new Range(\n\t\tstartPos.lineNumber,\n\t\tstartPos.column + columnOffsetRange.start,\n\t\tstartPos.lineNumber,\n\t\tstartPos.column + columnOffsetRange.endExclusive,\n\t);\n}\n\nexport function createReindentEdit(text: string, range: LineRange): TextEdit {\n\tconst newLines = splitLines(text);\n\tconst edits: SingleTextEdit[] = [];\n\tconst minIndent = findFirstMin(range.mapToLineArray(l => getIndentationLength(newLines[l - 1])), numberComparator)!;\n\trange.forEach(lineNumber => {\n\t\tedits.push(new SingleTextEdit(offsetRangeToRange(new OffsetRange(0, minIndent), new Position(lineNumber, 1)), ''));\n\t});\n\treturn new TextEdit(edits);\n}\n\nexport class PathBuilder {\n\tprivate _data: string = '';\n\n\tpublic moveTo(point: Point): this {\n\t\tthis._data += `M ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic lineTo(point: Point): this {\n\t\tthis._data += `L ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic curveTo(cp: Point, to: Point): this {\n\t\tthis._data += `Q ${cp.x} ${cp.y} ${to.x} ${to.y} `;\n\t\treturn this;\n\t}\n\n\tpublic curveTo2(cp1: Point, cp2: Point, to: Point): this {\n\t\tthis._data += `C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${to.x} ${to.y} `;\n\t\treturn this;\n\t}\n\n\tpublic build(): string {\n\t\treturn this._data;\n\t}\n}\n\n// Arguments are a bit messy currently, could be improved\nexport function createRectangle(\n\tlayout: { topLeft: Point; width: number; height: number },\n\tpadding: number | { top: number; right: number; bottom: number; left: number },\n\tborderRadius: number | { topLeft: number; topRight: number; bottomLeft: number; bottomRight: number },\n\toptions: { hideLeft?: boolean; hideRight?: boolean; hideTop?: boolean; hideBottom?: boolean } = {}\n): string {\n\n\tconst topLeftInner = layout.topLeft;\n\tconst topRightInner = topLeftInner.deltaX(layout.width);\n\tconst bottomLeftInner = topLeftInner.deltaY(layout.height);\n\tconst bottomRightInner = bottomLeftInner.deltaX(layout.width);\n\n\t// padding\n\tconst { top: paddingTop, bottom: paddingBottom, left: paddingLeft, right: paddingRight } = typeof padding === 'number' ?\n\t\t{ top: padding, bottom: padding, left: padding, right: padding }\n\t\t: padding;\n\n\t// corner radius\n\tconst { topLeft: radiusTL, topRight: radiusTR, bottomLeft: radiusBL, bottomRight: radiusBR } = typeof borderRadius === 'number' ?\n\t\t{ topLeft: borderRadius, topRight: borderRadius, bottomLeft: borderRadius, bottomRight: borderRadius } :\n\t\tborderRadius;\n\n\tconst totalHeight = layout.height + paddingTop + paddingBottom;\n\tconst totalWidth = layout.width + paddingLeft + paddingRight;\n\n\t// The path is drawn from bottom left at the end of the rounded corner in a clockwise direction\n\t// Before: before the rounded corner\n\t// After: after the rounded corner\n\tconst topLeft = topLeftInner.deltaX(-paddingLeft).deltaY(-paddingTop);\n\tconst topRight = topRightInner.deltaX(paddingRight).deltaY(-paddingTop);\n\tconst topLeftBefore = topLeft.deltaY(Math.min(radiusTL, totalHeight / 2));\n\tconst topLeftAfter = topLeft.deltaX(Math.min(radiusTL, totalWidth / 2));\n\tconst topRightBefore = topRight.deltaX(-Math.min(radiusTR, totalWidth / 2));\n\tconst topRightAfter = topRight.deltaY(Math.min(radiusTR, totalHeight / 2));\n\n\tconst bottomLeft = bottomLeftInner.deltaX(-paddingLeft).deltaY(paddingBottom);\n\tconst bottomRight = bottomRightInner.deltaX(paddingRight).deltaY(paddingBottom);\n\tconst bottomLeftBefore = bottomLeft.deltaX(Math.min(radiusBL, totalWidth / 2));\n\tconst bottomLeftAfter = bottomLeft.deltaY(-Math.min(radiusBL, totalHeight / 2));\n\tconst bottomRightBefore = bottomRight.deltaY(-Math.min(radiusBR, totalHeight / 2));\n\tconst bottomRightAfter = bottomRight.deltaX(-Math.min(radiusBR, totalWidth / 2));\n\n\tconst path = new PathBuilder();\n\n\tif (!options.hideLeft) {\n\t\tpath.moveTo(bottomLeftAfter).lineTo(topLeftBefore);\n\t}\n\n\tif (!options.hideLeft && !options.hideTop) {\n\t\tpath.curveTo(topLeft, topLeftAfter);\n\t} else {\n\t\tpath.moveTo(topLeftAfter);\n\t}\n\n\tif (!options.hideTop) {\n\t\tpath.lineTo(topRightBefore);\n\t}\n\n\tif (!options.hideTop && !options.hideRight) {\n\t\tpath.curveTo(topRight, topRightAfter);\n\t} else {\n\t\tpath.moveTo(topRightAfter);\n\t}\n\n\tif (!options.hideRight) {\n\t\tpath.lineTo(bottomRightBefore);\n\t}\n\n\tif (!options.hideRight && !options.hideBottom) {\n\t\tpath.curveTo(bottomRight, bottomRightAfter);\n\t} else {\n\t\tpath.moveTo(bottomRightAfter);\n\t}\n\n\tif (!options.hideBottom) {\n\t\tpath.lineTo(bottomLeftBefore);\n\t}\n\n\tif (!options.hideBottom && !options.hideLeft) {\n\t\tpath.curveTo(bottomLeft, bottomLeftAfter);\n\t} else {\n\t\tpath.moveTo(bottomLeftAfter);\n\t}\n\n\treturn path.build();\n}\n\ntype Value<T> = T | IObservable<T>;\ntype ValueOrList<T> = Value<T> | ValueOrList<T>[];\ntype ValueOrList2<T> = ValueOrList<T> | ValueOrList<ValueOrList<T>>;\n\ntype Element = HTMLElement | SVGElement;\n\ntype SVGElementTagNameMap2 = {\n\tsvg: SVGElement & {\n\t\twidth: number;\n\t\theight: number;\n\t\ttransform: string;\n\t\tviewBox: string;\n\t\tfill: string;\n\t};\n\tpath: SVGElement & {\n\t\td: string;\n\t\tstroke: string;\n\t\tfill: string;\n\t};\n\tlinearGradient: SVGElement & {\n\t\tid: string;\n\t\tx1: string | number;\n\t\tx2: string | number;\n\t};\n\tstop: SVGElement & {\n\t\toffset: string;\n\t};\n\trect: SVGElement & {\n\t\tx: number;\n\t\ty: number;\n\t\twidth: number;\n\t\theight: number;\n\t\tfill: string;\n\t};\n\tdefs: SVGElement;\n};\n\ntype DomTagCreateFn<TMap extends Record<string, any>> =\n\t<TTag extends keyof TMap>(\n\t\ttag: TTag,\n\t\tattributes: ElementAttributeKeys<TMap[TTag]> & { class?: ValueOrList<string | false | undefined>; ref?: IRef<TMap[TTag]> },\n\t\tchildren?: ChildNode,\n\t) => ObserverNode<TMap[TTag]>;\n\ntype DomCreateFn<TAttributes, TResult extends Element> =\n\t(\n\t\tattributes: ElementAttributeKeys<TAttributes> & { class?: ValueOrList<string | false | undefined>; ref?: IRef<TResult> },\n\t\tchildren?: ChildNode,\n\t) => ObserverNode<TResult>;\n\nexport type ChildNode = ValueOrList2<Element | string | ObserverNode | undefined>;\n\nexport namespace n {\n\tfunction nodeNs<TMap extends Record<string, any>>(elementNs: string | undefined = undefined): DomTagCreateFn<TMap> {\n\t\treturn (tag, attributes, children) => {\n\t\t\tconst className = attributes.class;\n\t\t\tdelete attributes.class;\n\t\t\tconst ref = attributes.ref;\n\t\t\tdelete attributes.ref;\n\n\t\t\treturn new ObserverNodeWithElement(tag as any, ref, elementNs, className, attributes, children);\n\t\t};\n\t}\n\n\tfunction node<TMap extends Record<string, any>, TKey extends keyof TMap>(tag: TKey, elementNs: string | undefined = undefined): DomCreateFn<TMap[TKey], TMap[TKey]> {\n\t\tconst f = nodeNs(elementNs) as any;\n\t\treturn (attributes, children) => {\n\t\t\treturn f(tag, attributes, children);\n\t\t};\n\t}\n\n\texport const div: DomCreateFn<HTMLDivElement, HTMLDivElement> = node<HTMLElementTagNameMap, 'div'>('div');\n\n\texport const elem = nodeNs<HTMLElementTagNameMap>(undefined);\n\n\texport const svg: DomCreateFn<SVGElementTagNameMap2['svg'], SVGElement> = node<SVGElementTagNameMap2, 'svg'>('svg', 'http://www.w3.org/2000/svg');\n\n\texport const svgElem = nodeNs<SVGElementTagNameMap2>('http://www.w3.org/2000/svg');\n\n\texport function ref<T = Element>(): IRefWithVal<T> {\n\t\tlet value: T | undefined = undefined;\n\t\tconst result: IRef<T> = function (val: T) {\n\t\t\tvalue = val;\n\t\t};\n\t\tObject.defineProperty(result, 'element', {\n\t\t\tget() {\n\t\t\t\tif (!value) {\n\t\t\t\t\tthrow new BugIndicatingError('Make sure the ref is set before accessing the element. Maybe wrong initialization order?');\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t});\n\t\treturn result as any;\n\t}\n}\n\nexport type IRef<T> = (value: T) => void;\n\nexport interface IRefWithVal<T> extends IRef<T> {\n\treadonly element: T;\n}\n\nexport abstract class ObserverNode<T extends Element = Element> {\n\tprivate readonly _deriveds: (IObservable<any>)[] = [];\n\n\tprotected readonly _element: T;\n\n\tconstructor(\n\t\ttag: string,\n\t\tref: IRef<T> | undefined,\n\t\tns: string | undefined,\n\t\tclassName: ValueOrList<string | undefined | false> | undefined,\n\t\tattributes: ElementAttributeKeys<T>,\n\t\tchildren: ChildNode,\n\t) {\n\t\tthis._element = (ns ? document.createElementNS(ns, tag) : document.createElement(tag)) as unknown as T;\n\t\tif (ref) {\n\t\t\tref(this._element);\n\t\t}\n\n\t\tif (className) {\n\t\t\tif (hasObservable(className)) {\n\t\t\t\tthis._deriveds.push(derived(this, reader => {\n\t\t\t\t\tsetClassName(this._element, getClassName(className, reader));\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tsetClassName(this._element, getClassName(className, undefined));\n\t\t\t}\n\t\t}\n\n\t\tfor (const [key, value] of Object.entries(attributes)) {\n\t\t\tif (key === 'style') {\n\t\t\t\tfor (const [cssKey, cssValue] of Object.entries(value)) {\n\t\t\t\t\tconst key = camelCaseToHyphenCase(cssKey);\n\t\t\t\t\tif (isObservable(cssValue)) {\n\t\t\t\t\t\tthis._deriveds.push(derived(this, reader => {\n\t\t\t\t\t\t\tthis._element.style.setProperty(key, convertCssValue(cssValue.read(reader)));\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._element.style.setProperty(key, convertCssValue(cssValue));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (key === 'tabIndex') {\n\t\t\t\tif (isObservable(value)) {\n\t\t\t\t\tthis._deriveds.push(derived(this, reader => {\n\t\t\t\t\t\tthis._element.tabIndex = value.read(reader) as any;\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\tthis._element.tabIndex = value;\n\t\t\t\t}\n\t\t\t} else if (key.startsWith('on')) {\n\t\t\t\t(this._element as any)[key] = value;\n\t\t\t} else {\n\t\t\t\tif (isObservable(value)) {\n\t\t\t\t\tthis._deriveds.push(derived(this, reader => {\n\t\t\t\t\t\tsetOrRemoveAttribute(this._element, key, value.read(reader));\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\tsetOrRemoveAttribute(this._element, key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (children) {\n\t\t\tfunction getChildren(reader: IReader | undefined, children: ValueOrList2<Element | string | ObserverNode | undefined>): (Element | string)[] {\n\t\t\t\tif (isObservable(children)) {\n\t\t\t\t\treturn getChildren(reader, children.read(reader));\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(children)) {\n\t\t\t\t\treturn children.flatMap(c => getChildren(reader, c));\n\t\t\t\t}\n\t\t\t\tif (children instanceof ObserverNode) {\n\t\t\t\t\tif (reader) {\n\t\t\t\t\t\tchildren.readEffect(reader);\n\t\t\t\t\t}\n\t\t\t\t\treturn [children._element];\n\t\t\t\t}\n\t\t\t\tif (children) {\n\t\t\t\t\treturn [children];\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst d = derived(this, reader => {\n\t\t\t\tthis._element.replaceChildren(...getChildren(reader, children));\n\t\t\t});\n\t\t\tthis._deriveds.push(d);\n\t\t\tif (!childrenIsObservable(children)) {\n\t\t\t\td.get();\n\t\t\t}\n\t\t}\n\t}\n\n\treadEffect(reader: IReader | undefined): void {\n\t\tfor (const d of this._deriveds) {\n\t\t\td.read(reader);\n\t\t}\n\t}\n\n\tkeepUpdated(store: DisposableStore): ObserverNodeWithElement<T> {\n\t\tderived(reader => {\n\t\t\tthis.readEffect(reader);\n\t\t}).recomputeInitiallyAndOnChange(store);\n\t\treturn this as unknown as ObserverNodeWithElement<T>;\n\t}\n\n\t/**\n\t * Creates a live element that will keep the element updated as long as the returned object is not disposed.\n\t*/\n\ttoDisposableLiveElement() {\n\t\tconst store = new DisposableStore();\n\t\tthis.keepUpdated(store);\n\t\treturn new LiveElement(this._element, store);\n\t}\n}\n\n\n\nfunction setClassName(domNode: Element, className: string) {\n\tif (isSVGElement(domNode)) {\n\t\tdomNode.setAttribute('class', className);\n\t} else {\n\t\tdomNode.className = className;\n\t}\n}\n\nfunction resolve<T>(value: ValueOrList<T>, reader: IReader | undefined, cb: (val: T) => void): void {\n\tif (isObservable(value)) {\n\t\tcb(value.read(reader));\n\t\treturn;\n\t}\n\tif (Array.isArray(value)) {\n\t\tfor (const v of value) {\n\t\t\tresolve(v, reader, cb);\n\t\t}\n\t\treturn;\n\t}\n\tcb(value as any);\n}\n\nfunction getClassName(className: ValueOrList<string | undefined | false> | undefined, reader: IReader | undefined): string {\n\tlet result = '';\n\tresolve(className, reader, val => {\n\t\tif (val) {\n\t\t\tif (result.length === 0) {\n\t\t\t\tresult = val;\n\t\t\t} else {\n\t\t\t\tresult += ' ' + val;\n\t\t\t}\n\t\t}\n\t});\n\treturn result;\n}\n\nfunction hasObservable(value: ValueOrList<unknown>): boolean {\n\tif (isObservable(value)) {\n\t\treturn true;\n\t}\n\tif (Array.isArray(value)) {\n\t\treturn value.some(v => hasObservable(v));\n\t}\n\treturn false;\n}\nfunction convertCssValue(value: any): string {\n\tif (typeof value === 'number') {\n\t\treturn value + 'px';\n\t}\n\treturn value;\n}\n\n\nfunction childrenIsObservable(children: ValueOrList2<Element | string | ObserverNode | undefined>): boolean {\n\tif (isObservable(children)) {\n\t\treturn true;\n\t}\n\tif (Array.isArray(children)) {\n\t\treturn children.some(c => childrenIsObservable(c));\n\t}\n\treturn false;\n}\n\nexport class LiveElement<T extends Element = HTMLElement> {\n\tconstructor(\n\t\tpublic readonly element: T,\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tdispose() {\n\t\tthis._disposable.dispose();\n\t}\n}\n\nexport class ObserverNodeWithElement<T extends Element = Element> extends ObserverNode<T> {\n\tpublic get element() {\n\t\treturn this._element;\n\t}\n\n\tpublic getIsHovered(store: DisposableStore): IObservable<boolean> {\n\t\tconst hovered = observableValue<boolean>('hovered', false);\n\t\tstore.add(addDisposableListener(this._element, 'mouseenter', () => hovered.set(true, undefined)));\n\t\tstore.add(addDisposableListener(this._element, 'mouseleave', () => hovered.set(false, undefined)));\n\t\treturn hovered;\n\t}\n}\n\nfunction setOrRemoveAttribute(element: Element, key: string, value: unknown) {\n\tif (value === null || value === undefined) {\n\t\telement.removeAttribute(camelCaseToHyphenCase(key));\n\t} else {\n\t\telement.setAttribute(camelCaseToHyphenCase(key), String(value));\n\t}\n}\n\nfunction camelCaseToHyphenCase(str: string) {\n\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nfunction isObservable<T>(obj: any): obj is IObservable<T> {\n\treturn obj && typeof obj === 'object' && obj['read'] !== undefined && obj['reportChanges'] !== undefined;\n}\n\ntype ElementAttributeKeys<T> = Partial<{\n\t[K in keyof T]: T[K] extends Function\n\t? never\n\t: T[K] extends object\n\t? ElementAttributeKeys<T[K]>\n\t: Value<number | T[K] | undefined | null>\n}>;\n\ntype RemoveFalsy<T> = T extends false | undefined | null ? never : T;\ntype Falsy<T> = T extends false | undefined | null ? T : never;\n\nexport function mapOutFalsy<T>(obs: IObservable<T>): IObservable<IObservable<RemoveFalsy<T>> | Falsy<T>> {\n\tconst nonUndefinedObs = derivedObservableWithCache<T | undefined | null | false>(undefined, (reader, lastValue) => obs.read(reader) || lastValue);\n\n\treturn derived(reader => {\n\t\tnonUndefinedObs.read(reader);\n\t\tconst val = obs.read(reader);\n\t\tif (!val) {\n\t\t\treturn undefined as Falsy<T>;\n\t\t}\n\n\t\treturn nonUndefinedObs as IObservable<RemoveFalsy<T>>;\n\t});\n}\n\nexport function rectToProps(fn: (reader: IReader) => Rect) {\n\treturn {\n\t\tleft: derived(reader => fn(reader).left),\n\t\ttop: derived(reader => fn(reader).top),\n\t\twidth: derived(reader => fn(reader).right - fn(reader).left),\n\t\theight: derived(reader => fn(reader).bottom - fn(reader).top),\n\t};\n}\n\nexport type FirstFnArg<T> = T extends (arg: infer U) => any ? U : never;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, h, isSVGElement } from '../../../../../../base/browser/dom.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { numberComparator } from '../../../../../../base/common/arrays.js';\nimport { findFirstMin } from '../../../../../../base/common/arraysFind.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { DisposableStore, IDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { derived, derivedObservableWithCache, IObservable, IReader, observableValue } from '../../../../../../base/common/observable.js';\nimport { OS } from '../../../../../../base/common/platform.js';\nimport { getIndentationLength, splitLines } from '../../../../../../base/common/strings.js';\nimport { MenuEntryActionViewItem } from '../../../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { ICodeEditor } from '../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../browser/point.js';\nimport { Rect } from '../../../../../browser/rect.js';\nimport { EditorOption } from '../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../common/core/lineRange.js';\nimport { OffsetRange } from '../../../../../common/core/offsetRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { SingleTextEdit, TextEdit } from '../../../../../common/core/textEdit.js';\nimport { RangeMapping } from '../../../../../common/diff/rangeMapping.js';\nimport { indentOfLine } from '../../../../../common/model/textModel.js';\n\nexport function maxContentWidthInRange(editor: ObservableCodeEditor, range: LineRange, reader: IReader | undefined): number {\n\teditor.layoutInfo.read(reader);\n\teditor.value.read(reader);\n\n\tconst model = editor.model.read(reader);\n\tif (!model) { return 0; }\n\tlet maxContentWidth = 0;\n\n\teditor.scrollTop.read(reader);\n\tfor (let i = range.startLineNumber; i < range.endLineNumberExclusive; i++) {\n\t\tconst column = model.getLineMaxColumn(i);\n\t\tlet lineContentWidth = editor.editor.getOffsetForColumn(i, column);\n\t\tif (lineContentWidth === -1) {\n\t\t\t// approximation\n\t\t\tconst typicalHalfwidthCharacterWidth = editor.editor.getOption(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\t\tconst approximation = column * typicalHalfwidthCharacterWidth;\n\t\t\tlineContentWidth = approximation;\n\t\t}\n\t\tmaxContentWidth = Math.max(maxContentWidth, lineContentWidth);\n\t}\n\tconst lines = range.mapToLineArray(l => model.getLineContent(l));\n\n\tif (maxContentWidth < 5 && lines.some(l => l.length > 0) && model.uri.scheme !== 'file') {\n\t\tconsole.error('unexpected width');\n\t}\n\treturn maxContentWidth;\n}\n\nexport function getOffsetForPos(editor: ObservableCodeEditor, pos: Position, reader: IReader): number {\n\teditor.layoutInfo.read(reader);\n\teditor.value.read(reader);\n\n\tconst model = editor.model.read(reader);\n\tif (!model) { return 0; }\n\n\teditor.scrollTop.read(reader);\n\tconst lineContentWidth = editor.editor.getOffsetForColumn(pos.lineNumber, pos.column);\n\n\treturn lineContentWidth;\n}\n\nexport function getPrefixTrim(diffRanges: Range[], originalLinesRange: LineRange, modifiedLines: string[], editor: ICodeEditor): { prefixTrim: number; prefixLeftOffset: number } {\n\tconst textModel = editor.getModel();\n\tif (!textModel) {\n\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t}\n\n\tconst replacementStart = diffRanges.map(r => r.isSingleLine() ? r.startColumn - 1 : 0);\n\tconst originalIndents = originalLinesRange.mapToLineArray(line => indentOfLine(textModel.getLineContent(line)));\n\tconst modifiedIndents = modifiedLines.map(line => indentOfLine(line));\n\tconst prefixTrim = Math.min(...replacementStart, ...originalIndents, ...modifiedIndents);\n\n\tconst prefixLeftOffset = editor.getOffsetForColumn(originalLinesRange.startLineNumber, prefixTrim + 1);\n\n\treturn { prefixTrim, prefixLeftOffset };\n}\n\nexport class StatusBarViewItem extends MenuEntryActionViewItem {\n\tprotected readonly _updateLabelListener = this._register(this._contextKeyService.onDidChangeContext(() => {\n\t\tthis.updateLabel();\n\t}));\n\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService, true);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst div = h('div.keybinding').root;\n\t\t\tconst keybindingLabel = this._register(new KeybindingLabel(div, OS, { disableTitle: true, ...unthemedKeybindingLabelOptions }));\n\t\t\tkeybindingLabel.set(kb);\n\t\t\tthis.label.textContent = this._action.label;\n\t\t\tthis.label.appendChild(div);\n\t\t\tthis.label.classList.add('inlineSuggestionStatusBarItemLabel');\n\t\t}\n\t}\n\n\tprotected override updateTooltip(): void {\n\t\t// NOOP, disable tooltip\n\t}\n}\nexport function applyEditToModifiedRangeMappings(rangeMapping: RangeMapping[], edit: TextEdit): RangeMapping[] {\n\tconst updatedMappings: RangeMapping[] = [];\n\tfor (const m of rangeMapping) {\n\t\tconst updatedRange = edit.mapRange(m.modifiedRange);\n\t\tupdatedMappings.push(new RangeMapping(m.originalRange, updatedRange));\n\t}\n\treturn updatedMappings;\n}\n\n\nexport function classNames(...classes: (string | false | undefined | null)[]) {\n\treturn classes.filter(c => typeof c === 'string').join(' ');\n}\n\nfunction offsetRangeToRange(columnOffsetRange: OffsetRange, startPos: Position): Range {\n\treturn new Range(\n\t\tstartPos.lineNumber,\n\t\tstartPos.column + columnOffsetRange.start,\n\t\tstartPos.lineNumber,\n\t\tstartPos.column + columnOffsetRange.endExclusive,\n\t);\n}\n\nexport function createReindentEdit(text: string, range: LineRange): TextEdit {\n\tconst newLines = splitLines(text);\n\tconst edits: SingleTextEdit[] = [];\n\tconst minIndent = findFirstMin(range.mapToLineArray(l => getIndentationLength(newLines[l - 1])), numberComparator)!;\n\trange.forEach(lineNumber => {\n\t\tedits.push(new SingleTextEdit(offsetRangeToRange(new OffsetRange(0, minIndent), new Position(lineNumber, 1)), ''));\n\t});\n\treturn new TextEdit(edits);\n}\n\nexport class PathBuilder {\n\tprivate _data: string = '';\n\n\tpublic moveTo(point: Point): this {\n\t\tthis._data += `M ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic lineTo(point: Point): this {\n\t\tthis._data += `L ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic curveTo(cp: Point, to: Point): this {\n\t\tthis._data += `Q ${cp.x} ${cp.y} ${to.x} ${to.y} `;\n\t\treturn this;\n\t}\n\n\tpublic curveTo2(cp1: Point, cp2: Point, to: Point): this {\n\t\tthis._data += `C ${cp1.x} ${cp1.y} ${cp2.x} ${cp2.y} ${to.x} ${to.y} `;\n\t\treturn this;\n\t}\n\n\tpublic build(): string {\n\t\treturn this._data;\n\t}\n}\n\n// Arguments are a bit messy currently, could be improved\nexport function createRectangle(\n\tlayout: { topLeft: Point; width: number; height: number },\n\tpadding: number | { top: number; right: number; bottom: number; left: number },\n\tborderRadius: number | { topLeft: number; topRight: number; bottomLeft: number; bottomRight: number },\n\toptions: { hideLeft?: boolean; hideRight?: boolean; hideTop?: boolean; hideBottom?: boolean } = {}\n): string {\n\n\tconst topLeftInner = layout.topLeft;\n\tconst topRightInner = topLeftInner.deltaX(layout.width);\n\tconst bottomLeftInner = topLeftInner.deltaY(layout.height);\n\tconst bottomRightInner = bottomLeftInner.deltaX(layout.width);\n\n\t// padding\n\tconst { top: paddingTop, bottom: paddingBottom, left: paddingLeft, right: paddingRight } = typeof padding === 'number' ?\n\t\t{ top: padding, bottom: padding, left: padding, right: padding }\n\t\t: padding;\n\n\t// corner radius\n\tconst { topLeft: radiusTL, topRight: radiusTR, bottomLeft: radiusBL, bottomRight: radiusBR } = typeof borderRadius === 'number' ?\n\t\t{ topLeft: borderRadius, topRight: borderRadius, bottomLeft: borderRadius, bottomRight: borderRadius } :\n\t\tborderRadius;\n\n\tconst totalHeight = layout.height + paddingTop + paddingBottom;\n\tconst totalWidth = layout.width + paddingLeft + paddingRight;\n\n\t// The path is drawn from bottom left at the end of the rounded corner in a clockwise direction\n\t// Before: before the rounded corner\n\t// After: after the rounded corner\n\tconst topLeft = topLeftInner.deltaX(-paddingLeft).deltaY(-paddingTop);\n\tconst topRight = topRightInner.deltaX(paddingRight).deltaY(-paddingTop);\n\tconst topLeftBefore = topLeft.deltaY(Math.min(radiusTL, totalHeight / 2));\n\tconst topLeftAfter = topLeft.deltaX(Math.min(radiusTL, totalWidth / 2));\n\tconst topRightBefore = topRight.deltaX(-Math.min(radiusTR, totalWidth / 2));\n\tconst topRightAfter = topRight.deltaY(Math.min(radiusTR, totalHeight / 2));\n\n\tconst bottomLeft = bottomLeftInner.deltaX(-paddingLeft).deltaY(paddingBottom);\n\tconst bottomRight = bottomRightInner.deltaX(paddingRight).deltaY(paddingBottom);\n\tconst bottomLeftBefore = bottomLeft.deltaX(Math.min(radiusBL, totalWidth / 2));\n\tconst bottomLeftAfter = bottomLeft.deltaY(-Math.min(radiusBL, totalHeight / 2));\n\tconst bottomRightBefore = bottomRight.deltaY(-Math.min(radiusBR, totalHeight / 2));\n\tconst bottomRightAfter = bottomRight.deltaX(-Math.min(radiusBR, totalWidth / 2));\n\n\tconst path = new PathBuilder();\n\n\tif (!options.hideLeft) {\n\t\tpath.moveTo(bottomLeftAfter).lineTo(topLeftBefore);\n\t}\n\n\tif (!options.hideLeft && !options.hideTop) {\n\t\tpath.curveTo(topLeft, topLeftAfter);\n\t} else {\n\t\tpath.moveTo(topLeftAfter);\n\t}\n\n\tif (!options.hideTop) {\n\t\tpath.lineTo(topRightBefore);\n\t}\n\n\tif (!options.hideTop && !options.hideRight) {\n\t\tpath.curveTo(topRight, topRightAfter);\n\t} else {\n\t\tpath.moveTo(topRightAfter);\n\t}\n\n\tif (!options.hideRight) {\n\t\tpath.lineTo(bottomRightBefore);\n\t}\n\n\tif (!options.hideRight && !options.hideBottom) {\n\t\tpath.curveTo(bottomRight, bottomRightAfter);\n\t} else {\n\t\tpath.moveTo(bottomRightAfter);\n\t}\n\n\tif (!options.hideBottom) {\n\t\tpath.lineTo(bottomLeftBefore);\n\t}\n\n\tif (!options.hideBottom && !options.hideLeft) {\n\t\tpath.curveTo(bottomLeft, bottomLeftAfter);\n\t} else {\n\t\tpath.moveTo(bottomLeftAfter);\n\t}\n\n\treturn path.build();\n}\n\ntype Value<T> = T | IObservable<T>;\ntype ValueOrList<T> = Value<T> | ValueOrList<T>[];\ntype ValueOrList2<T> = ValueOrList<T> | ValueOrList<ValueOrList<T>>;\n\ntype Element = HTMLElement | SVGElement;\n\ntype SVGElementTagNameMap2 = {\n\tsvg: SVGElement & {\n\t\twidth: number;\n\t\theight: number;\n\t\ttransform: string;\n\t\tviewBox: string;\n\t\tfill: string;\n\t};\n\tpath: SVGElement & {\n\t\td: string;\n\t\tstroke: string;\n\t\tfill: string;\n\t};\n\tlinearGradient: SVGElement & {\n\t\tid: string;\n\t\tx1: string | number;\n\t\tx2: string | number;\n\t};\n\tstop: SVGElement & {\n\t\toffset: string;\n\t};\n\trect: SVGElement & {\n\t\tx: number;\n\t\ty: number;\n\t\twidth: number;\n\t\theight: number;\n\t\tfill: string;\n\t};\n\tdefs: SVGElement;\n};\n\ntype DomTagCreateFn<TMap extends Record<string, any>> =\n\t<TTag extends keyof TMap>(\n\t\ttag: TTag,\n\t\tattributes: ElementAttributeKeys<TMap[TTag]> & { class?: ValueOrList<string | false | undefined>; ref?: IRef<TMap[TTag]> },\n\t\tchildren?: ChildNode,\n\t) => ObserverNode<TMap[TTag]>;\n\ntype DomCreateFn<TAttributes, TResult extends Element> =\n\t(\n\t\tattributes: ElementAttributeKeys<TAttributes> & { class?: ValueOrList<string | false | undefined>; ref?: IRef<TResult> },\n\t\tchildren?: ChildNode,\n\t) => ObserverNode<TResult>;\n\nexport type ChildNode = ValueOrList2<Element | string | ObserverNode | undefined>;\n\nexport namespace n {\n\tfunction nodeNs<TMap extends Record<string, any>>(elementNs: string | undefined = undefined): DomTagCreateFn<TMap> {\n\t\treturn (tag, attributes, children) => {\n\t\t\tconst className = attributes.class;\n\t\t\tdelete attributes.class;\n\t\t\tconst ref = attributes.ref;\n\t\t\tdelete attributes.ref;\n\n\t\t\treturn new ObserverNodeWithElement(tag as any, ref, elementNs, className, attributes, children);\n\t\t};\n\t}\n\n\tfunction node<TMap extends Record<string, any>, TKey extends keyof TMap>(tag: TKey, elementNs: string | undefined = undefined): DomCreateFn<TMap[TKey], TMap[TKey]> {\n\t\tconst f = nodeNs(elementNs) as any;\n\t\treturn (attributes, children) => {\n\t\t\treturn f(tag, attributes, children);\n\t\t};\n\t}\n\n\texport const div: DomCreateFn<HTMLDivElement, HTMLDivElement> = node<HTMLElementTagNameMap, 'div'>('div');\n\n\texport const elem = nodeNs<HTMLElementTagNameMap>(undefined);\n\n\texport const svg: DomCreateFn<SVGElementTagNameMap2['svg'], SVGElement> = node<SVGElementTagNameMap2, 'svg'>('svg', 'http://www.w3.org/2000/svg');\n\n\texport const svgElem = nodeNs<SVGElementTagNameMap2>('http://www.w3.org/2000/svg');\n\n\texport function ref<T = Element>(): IRefWithVal<T> {\n\t\tlet value: T | undefined = undefined;\n\t\tconst result: IRef<T> = function (val: T) {\n\t\t\tvalue = val;\n\t\t};\n\t\tObject.defineProperty(result, 'element', {\n\t\t\tget() {\n\t\t\t\tif (!value) {\n\t\t\t\t\tthrow new BugIndicatingError('Make sure the ref is set before accessing the element. Maybe wrong initialization order?');\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t});\n\t\treturn result as any;\n\t}\n}\n\nexport type IRef<T> = (value: T) => void;\n\nexport interface IRefWithVal<T> extends IRef<T> {\n\treadonly element: T;\n}\n\nexport abstract class ObserverNode<T extends Element = Element> {\n\tprivate readonly _deriveds: (IObservable<any>)[] = [];\n\n\tprotected readonly _element: T;\n\n\tconstructor(\n\t\ttag: string,\n\t\tref: IRef<T> | undefined,\n\t\tns: string | undefined,\n\t\tclassName: ValueOrList<string | undefined | false> | undefined,\n\t\tattributes: ElementAttributeKeys<T>,\n\t\tchildren: ChildNode,\n\t) {\n\t\tthis._element = (ns ? document.createElementNS(ns, tag) : document.createElement(tag)) as unknown as T;\n\t\tif (ref) {\n\t\t\tref(this._element);\n\t\t}\n\n\t\tif (className) {\n\t\t\tif (hasObservable(className)) {\n\t\t\t\tthis._deriveds.push(derived(this, reader => {\n\t\t\t\t\tsetClassName(this._element, getClassName(className, reader));\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tsetClassName(this._element, getClassName(className, undefined));\n\t\t\t}\n\t\t}\n\n\t\tfor (const [key, value] of Object.entries(attributes)) {\n\t\t\tif (key === 'style') {\n\t\t\t\tfor (const [cssKey, cssValue] of Object.entries(value)) {\n\t\t\t\t\tconst key = camelCaseToHyphenCase(cssKey);\n\t\t\t\t\tif (isObservable(cssValue)) {\n\t\t\t\t\t\tthis._deriveds.push(derived(this, reader => {\n\t\t\t\t\t\t\tthis._element.style.setProperty(key, convertCssValue(cssValue.read(reader)));\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._element.style.setProperty(key, convertCssValue(cssValue));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (key === 'tabIndex') {\n\t\t\t\tif (isObservable(value)) {\n\t\t\t\t\tthis._deriveds.push(derived(this, reader => {\n\t\t\t\t\t\tthis._element.tabIndex = value.read(reader) as any;\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\tthis._element.tabIndex = value;\n\t\t\t\t}\n\t\t\t} else if (key.startsWith('on')) {\n\t\t\t\t(this._element as any)[key] = value;\n\t\t\t} else {\n\t\t\t\tif (isObservable(value)) {\n\t\t\t\t\tthis._deriveds.push(derived(this, reader => {\n\t\t\t\t\t\tsetOrRemoveAttribute(this._element, key, value.read(reader));\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\tsetOrRemoveAttribute(this._element, key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (children) {\n\t\t\tfunction getChildren(reader: IReader | undefined, children: ValueOrList2<Element | string | ObserverNode | undefined>): (Element | string)[] {\n\t\t\t\tif (isObservable(children)) {\n\t\t\t\t\treturn getChildren(reader, children.read(reader));\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(children)) {\n\t\t\t\t\treturn children.flatMap(c => getChildren(reader, c));\n\t\t\t\t}\n\t\t\t\tif (children instanceof ObserverNode) {\n\t\t\t\t\tif (reader) {\n\t\t\t\t\t\tchildren.readEffect(reader);\n\t\t\t\t\t}\n\t\t\t\t\treturn [children._element];\n\t\t\t\t}\n\t\t\t\tif (children) {\n\t\t\t\t\treturn [children];\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst d = derived(this, reader => {\n\t\t\t\tthis._element.replaceChildren(...getChildren(reader, children));\n\t\t\t});\n\t\t\tthis._deriveds.push(d);\n\t\t\tif (!childrenIsObservable(children)) {\n\t\t\t\td.get();\n\t\t\t}\n\t\t}\n\t}\n\n\treadEffect(reader: IReader | undefined): void {\n\t\tfor (const d of this._deriveds) {\n\t\t\td.read(reader);\n\t\t}\n\t}\n\n\tkeepUpdated(store: DisposableStore): ObserverNodeWithElement<T> {\n\t\tderived(reader => {\n\t\t\tthis.readEffect(reader);\n\t\t}).recomputeInitiallyAndOnChange(store);\n\t\treturn this as unknown as ObserverNodeWithElement<T>;\n\t}\n\n\t/**\n\t * Creates a live element that will keep the element updated as long as the returned object is not disposed.\n\t*/\n\ttoDisposableLiveElement() {\n\t\tconst store = new DisposableStore();\n\t\tthis.keepUpdated(store);\n\t\treturn new LiveElement(this._element, store);\n\t}\n}\n\n\n\nfunction setClassName(domNode: Element, className: string) {\n\tif (isSVGElement(domNode)) {\n\t\tdomNode.setAttribute('class', className);\n\t} else {\n\t\tdomNode.className = className;\n\t}\n}\n\nfunction resolve<T>(value: ValueOrList<T>, reader: IReader | undefined, cb: (val: T) => void): void {\n\tif (isObservable(value)) {\n\t\tcb(value.read(reader));\n\t\treturn;\n\t}\n\tif (Array.isArray(value)) {\n\t\tfor (const v of value) {\n\t\t\tresolve(v, reader, cb);\n\t\t}\n\t\treturn;\n\t}\n\tcb(value as any);\n}\n\nfunction getClassName(className: ValueOrList<string | undefined | false> | undefined, reader: IReader | undefined): string {\n\tlet result = '';\n\tresolve(className, reader, val => {\n\t\tif (val) {\n\t\t\tif (result.length === 0) {\n\t\t\t\tresult = val;\n\t\t\t} else {\n\t\t\t\tresult += ' ' + val;\n\t\t\t}\n\t\t}\n\t});\n\treturn result;\n}\n\nfunction hasObservable(value: ValueOrList<unknown>): boolean {\n\tif (isObservable(value)) {\n\t\treturn true;\n\t}\n\tif (Array.isArray(value)) {\n\t\treturn value.some(v => hasObservable(v));\n\t}\n\treturn false;\n}\nfunction convertCssValue(value: any): string {\n\tif (typeof value === 'number') {\n\t\treturn value + 'px';\n\t}\n\treturn value;\n}\n\n\nfunction childrenIsObservable(children: ValueOrList2<Element | string | ObserverNode | undefined>): boolean {\n\tif (isObservable(children)) {\n\t\treturn true;\n\t}\n\tif (Array.isArray(children)) {\n\t\treturn children.some(c => childrenIsObservable(c));\n\t}\n\treturn false;\n}\n\nexport class LiveElement<T extends Element = HTMLElement> {\n\tconstructor(\n\t\tpublic readonly element: T,\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tdispose() {\n\t\tthis._disposable.dispose();\n\t}\n}\n\nexport class ObserverNodeWithElement<T extends Element = Element> extends ObserverNode<T> {\n\tpublic get element() {\n\t\treturn this._element;\n\t}\n\n\tpublic getIsHovered(store: DisposableStore): IObservable<boolean> {\n\t\tconst hovered = observableValue<boolean>('hovered', false);\n\t\tstore.add(addDisposableListener(this._element, 'mouseenter', () => hovered.set(true, undefined)));\n\t\tstore.add(addDisposableListener(this._element, 'mouseleave', () => hovered.set(false, undefined)));\n\t\treturn hovered;\n\t}\n}\n\nfunction setOrRemoveAttribute(element: Element, key: string, value: unknown) {\n\tif (value === null || value === undefined) {\n\t\telement.removeAttribute(camelCaseToHyphenCase(key));\n\t} else {\n\t\telement.setAttribute(camelCaseToHyphenCase(key), String(value));\n\t}\n}\n\nfunction camelCaseToHyphenCase(str: string) {\n\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nfunction isObservable<T>(obj: any): obj is IObservable<T> {\n\treturn obj && typeof obj === 'object' && obj['read'] !== undefined && obj['reportChanges'] !== undefined;\n}\n\ntype ElementAttributeKeys<T> = Partial<{\n\t[K in keyof T]: T[K] extends Function\n\t? never\n\t: T[K] extends object\n\t? ElementAttributeKeys<T[K]>\n\t: Value<number | T[K] | undefined | null>\n}>;\n\ntype RemoveFalsy<T> = T extends false | undefined | null ? never : T;\ntype Falsy<T> = T extends false | undefined | null ? T : never;\n\nexport function mapOutFalsy<T>(obs: IObservable<T>): IObservable<IObservable<RemoveFalsy<T>> | Falsy<T>> {\n\tconst nonUndefinedObs = derivedObservableWithCache<T | undefined | null | false>(undefined, (reader, lastValue) => obs.read(reader) || lastValue);\n\n\treturn derived(reader => {\n\t\tnonUndefinedObs.read(reader);\n\t\tconst val = obs.read(reader);\n\t\tif (!val) {\n\t\t\treturn undefined as Falsy<T>;\n\t\t}\n\n\t\treturn nonUndefinedObs as IObservable<RemoveFalsy<T>>;\n\t});\n}\n\nexport function rectToProps(fn: (reader: IReader) => Rect) {\n\treturn {\n\t\tleft: derived(reader => fn(reader).left),\n\t\ttop: derived(reader => fn(reader).top),\n\t\twidth: derived(reader => fn(reader).right - fn(reader).left),\n\t\theight: derived(reader => fn(reader).bottom - fn(reader).top),\n\t};\n}\n\nexport type FirstFnArg<T> = T extends (arg: infer U) => any ? U : never;\n"]}