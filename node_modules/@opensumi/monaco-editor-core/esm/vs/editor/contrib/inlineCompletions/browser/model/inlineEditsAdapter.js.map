{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/editor/contrib/inlineCompletions/browser/model/inlineEditsAdapter.ts","vs/editor/contrib/inlineCompletions/browser/model/inlineEditsAdapter.ts"],"names":[],"mappings":"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","file":"inlineEditsAdapter.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorunWithStore, observableSignalFromEvent } from '../../../../../base/common/observable.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { IInlineEdit, InlineCompletion, InlineCompletionContext, InlineCompletions, InlineCompletionsProvider, InlineEditProvider, InlineEditTriggerKind } from '../../../../common/languages.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\n\nexport class InlineEditsAdapterContribution extends Disposable {\n\tpublic static ID = 'editor.contrib.inlineEditsAdapter';\n\tpublic static isFirst = true;\n\n\tconstructor(\n\t\t_editor: ICodeEditor,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tif (InlineEditsAdapterContribution.isFirst) {\n\t\t\tInlineEditsAdapterContribution.isFirst = false;\n\t\t\tthis.instantiationService.createInstance(InlineEditsAdapter);\n\t\t}\n\t}\n}\n\nexport class InlineEditsAdapter extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {\n\t\tsuper();\n\n\t\tconst didChangeSignal = observableSignalFromEvent('didChangeSignal', this._languageFeaturesService.inlineEditProvider.onDidChange);\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tdidChangeSignal.read(reader);\n\n\t\t\ttype InlineCompletionsAndEdits = InlineCompletions<InlineCompletion & { edit: IInlineEdit }> & {\n\t\t\t\tedits: {\n\t\t\t\t\tresult: IInlineEdit;\n\t\t\t\t\tprovider: InlineEditProvider<IInlineEdit>;\n\t\t\t\t}[];\n\t\t\t};\n\n\t\t\tstore.add(this._languageFeaturesService.inlineCompletionsProvider.register('*', {\n\t\t\t\tasync provideInlineCompletions(model: ITextModel, position: Position, context: InlineCompletionContext, token: CancellationToken): Promise<InlineCompletionsAndEdits | undefined> {\n\t\t\t\t\tif (!context.includeInlineEdits) { return undefined; }\n\n\t\t\t\t\tconst allInlineEditProvider = _languageFeaturesService.inlineEditProvider.all(model);\n\t\t\t\t\tconst inlineEdits = await Promise.all(allInlineEditProvider.map(async provider => {\n\t\t\t\t\t\tconst result = await provider.provideInlineEdit(model, {\n\t\t\t\t\t\t\ttriggerKind: InlineEditTriggerKind.Automatic,\n\t\t\t\t\t\t\trequestUuid: context.requestUuid\n\t\t\t\t\t\t}, token);\n\t\t\t\t\t\tif (!result) { return undefined; }\n\t\t\t\t\t\treturn { result, provider };\n\t\t\t\t\t}));\n\n\t\t\t\t\tconst definedEdits = inlineEdits.filter(e => !!e);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tedits: definedEdits,\n\t\t\t\t\t\titems: definedEdits.map(e => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\trange: e.result.range,\n\t\t\t\t\t\t\t\tshowRange: e.result.showRange,\n\t\t\t\t\t\t\t\tinsertText: e.result.text,\n\t\t\t\t\t\t\t\tcommand: e.result.accepted,\n\t\t\t\t\t\t\t\tshownCommand: e.result.shown,\n\t\t\t\t\t\t\t\tisInlineEdit: true,\n\t\t\t\t\t\t\t\tedit: e.result,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcommands: definedEdits.flatMap(e => e.result.commands ?? []),\n\t\t\t\t\t\tenableForwardStability: true,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\thandleRejection: (completions: InlineCompletions, item: InlineCompletionsAndEdits['items'][number]): void => {\n\t\t\t\t\tif (item.edit.rejected) {\n\t\t\t\t\t\tthis._commandService.executeCommand(item.edit.rejected.id, ...(item.edit.rejected.arguments ?? []));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfreeInlineCompletions(c: InlineCompletionsAndEdits) {\n\t\t\t\t\tfor (const e of c.edits) {\n\t\t\t\t\t\te.provider.freeInlineEdit(e.result);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttoString(): string {\n\t\t\t\t\treturn 'InlineEditsAdapter';\n\t\t\t\t}\n\t\t\t} satisfies InlineCompletionsProvider<InlineCompletionsAndEdits>));\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorunWithStore, observableSignalFromEvent } from '../../../../../base/common/observable.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { IInlineEdit, InlineCompletion, InlineCompletionContext, InlineCompletions, InlineCompletionsProvider, InlineEditProvider, InlineEditTriggerKind } from '../../../../common/languages.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\n\nexport class InlineEditsAdapterContribution extends Disposable {\n\tpublic static ID = 'editor.contrib.inlineEditsAdapter';\n\tpublic static isFirst = true;\n\n\tconstructor(\n\t\t_editor: ICodeEditor,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tif (InlineEditsAdapterContribution.isFirst) {\n\t\t\tInlineEditsAdapterContribution.isFirst = false;\n\t\t\tthis.instantiationService.createInstance(InlineEditsAdapter);\n\t\t}\n\t}\n}\n\nexport class InlineEditsAdapter extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {\n\t\tsuper();\n\n\t\tconst didChangeSignal = observableSignalFromEvent('didChangeSignal', this._languageFeaturesService.inlineEditProvider.onDidChange);\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tdidChangeSignal.read(reader);\n\n\t\t\ttype InlineCompletionsAndEdits = InlineCompletions<InlineCompletion & { edit: IInlineEdit }> & {\n\t\t\t\tedits: {\n\t\t\t\t\tresult: IInlineEdit;\n\t\t\t\t\tprovider: InlineEditProvider<IInlineEdit>;\n\t\t\t\t}[];\n\t\t\t};\n\n\t\t\tstore.add(this._languageFeaturesService.inlineCompletionsProvider.register('*', {\n\t\t\t\tasync provideInlineCompletions(model: ITextModel, position: Position, context: InlineCompletionContext, token: CancellationToken): Promise<InlineCompletionsAndEdits | undefined> {\n\t\t\t\t\tif (!context.includeInlineEdits) { return undefined; }\n\n\t\t\t\t\tconst allInlineEditProvider = _languageFeaturesService.inlineEditProvider.all(model);\n\t\t\t\t\tconst inlineEdits = await Promise.all(allInlineEditProvider.map(async provider => {\n\t\t\t\t\t\tconst result = await provider.provideInlineEdit(model, {\n\t\t\t\t\t\t\ttriggerKind: InlineEditTriggerKind.Automatic,\n\t\t\t\t\t\t\trequestUuid: context.requestUuid\n\t\t\t\t\t\t}, token);\n\t\t\t\t\t\tif (!result) { return undefined; }\n\t\t\t\t\t\treturn { result, provider };\n\t\t\t\t\t}));\n\n\t\t\t\t\tconst definedEdits = inlineEdits.filter(e => !!e);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tedits: definedEdits,\n\t\t\t\t\t\titems: definedEdits.map(e => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\trange: e.result.range,\n\t\t\t\t\t\t\t\tshowRange: e.result.showRange,\n\t\t\t\t\t\t\t\tinsertText: e.result.text,\n\t\t\t\t\t\t\t\tcommand: e.result.accepted,\n\t\t\t\t\t\t\t\tshownCommand: e.result.shown,\n\t\t\t\t\t\t\t\tisInlineEdit: true,\n\t\t\t\t\t\t\t\tedit: e.result,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tcommands: definedEdits.flatMap(e => e.result.commands ?? []),\n\t\t\t\t\t\tenableForwardStability: true,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\thandleRejection: (completions: InlineCompletions, item: InlineCompletionsAndEdits['items'][number]): void => {\n\t\t\t\t\tif (item.edit.rejected) {\n\t\t\t\t\t\tthis._commandService.executeCommand(item.edit.rejected.id, ...(item.edit.rejected.arguments ?? []));\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfreeInlineCompletions(c: InlineCompletionsAndEdits) {\n\t\t\t\t\tfor (const e of c.edits) {\n\t\t\t\t\t\te.provider.freeInlineEdit(e.result);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttoString(): string {\n\t\t\t\t\treturn 'InlineEditsAdapter';\n\t\t\t\t}\n\t\t\t} satisfies InlineCompletionsProvider<InlineCompletionsAndEdits>));\n\t\t}));\n\t}\n}\n"]}