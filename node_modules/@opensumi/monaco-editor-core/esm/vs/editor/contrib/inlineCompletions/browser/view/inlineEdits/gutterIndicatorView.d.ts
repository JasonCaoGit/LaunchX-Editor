import { Disposable } from '../../../../../../base/common/lifecycle.js';
import { IObservable, ISettableObservable } from '../../../../../../base/common/observable.js';
import { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';
import { ObservableCodeEditor } from '../../../../../browser/observableCodeEditor.js';
import { HoverService } from '../../../../../browser/services/hoverService/hoverService.js';
import { LineRange } from '../../../../../common/core/lineRange.js';
import { InlineCompletionsModel } from '../../model/inlineCompletionsModel.js';
import { IAccessibilityService } from '../../../../../../platform/accessibility/common/accessibility.js';
export declare const inlineEditIndicatorPrimaryForeground: string;
export declare const inlineEditIndicatorPrimaryBackground: string;
export declare const inlineEditIndicatorSecondaryForeground: string;
export declare const inlineEditIndicatorSecondaryBackground: string;
export declare const inlineEditIndicatorsuccessfulForeground: string;
export declare const inlineEditIndicatorsuccessfulBackground: string;
export declare const inlineEditIndicatorBackground: string;
export declare class InlineEditsGutterIndicator extends Disposable {
    private readonly _editorObs;
    private readonly _originalRange;
    private readonly _verticalOffset;
    private readonly _model;
    private readonly _isHoveringOverInlineEdit;
    private readonly _focusIsInMenu;
    private readonly _hoverService;
    private readonly _instantiationService;
    constructor(_editorObs: ObservableCodeEditor, _originalRange: IObservable<LineRange | undefined>, _verticalOffset: IObservable<number>, _model: IObservable<InlineCompletionsModel | undefined>, _isHoveringOverInlineEdit: IObservable<boolean>, _focusIsInMenu: ISettableObservable<boolean>, _hoverService: HoverService, _instantiationService: IInstantiationService, accessibilityService: IAccessibilityService);
    private readonly _originalRangeObs;
    private readonly _state;
    private readonly _stickyScrollController;
    private readonly _stickyScrollHeight;
    private readonly _layout;
    private readonly _tabAction;
    private readonly _iconRef;
    private _hoverVisible;
    private readonly _isHoveredOverIcon;
    private _showHover;
    private readonly _indicator;
}
