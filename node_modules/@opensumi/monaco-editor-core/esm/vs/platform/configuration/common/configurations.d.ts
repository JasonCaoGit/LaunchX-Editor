import { IStringDictionary } from '../../../base/common/collections.js';
import { Disposable } from '../../../base/common/lifecycle.js';
import { ConfigurationModel } from './configurationModels.js';
import { ILogService } from '../../log/common/log.js';
export declare class DefaultConfiguration extends Disposable {
    private readonly logService;
    private readonly _onDidChangeConfiguration;
    readonly onDidChangeConfiguration: import("../../../base/common/event.js").Event<{
        defaults: ConfigurationModel;
        properties: string[];
    }>;
    private _configurationModel;
    get configurationModel(): ConfigurationModel;
    constructor(logService: ILogService);
    initialize(): Promise<ConfigurationModel>;
    reload(): ConfigurationModel;
    protected onDidUpdateConfiguration(properties: string[], defaultsOverrides?: boolean): void;
    protected getConfigurationDefaultOverrides(): IStringDictionary<any>;
    private resetConfigurationModel;
    private updateConfigurationModel;
}
