import { IConfigurationService } from '../../configuration/common/configuration.js';
export type MenuBarVisibility = 'classic' | 'visible' | 'toggle' | 'hidden' | 'compact';
export interface IWindowSettings {
    readonly openFilesInNewWindow: 'on' | 'off' | 'default';
    readonly openFoldersInNewWindow: 'on' | 'off' | 'default';
    readonly openWithoutArgumentsInNewWindow: 'on' | 'off';
    readonly restoreWindows: 'preserve' | 'all' | 'folders' | 'one' | 'none';
    readonly restoreFullscreen: boolean;
    readonly zoomLevel: number;
    readonly titleBarStyle: TitlebarStyle;
    readonly autoDetectHighContrast: boolean;
    readonly autoDetectColorScheme: boolean;
    readonly menuBarVisibility: MenuBarVisibility;
    readonly newWindowDimensions: 'default' | 'inherit' | 'offset' | 'maximized' | 'fullscreen';
    readonly nativeTabs: boolean;
    readonly nativeFullScreen: boolean;
    readonly enableMenuBarMnemonics: boolean;
    readonly closeWhenEmpty: boolean;
    readonly clickThroughInactive: boolean;
    readonly newWindowProfile: string;
    readonly density: IDensitySettings;
    readonly experimentalControlOverlay?: boolean;
}
export interface IDensitySettings {
    readonly editorTabHeight: 'default' | 'compact';
}
export declare enum TitlebarStyle {
    NATIVE = "native",
    CUSTOM = "custom"
}
export declare let titlebarStyleDefaultOverride: 'custom' | undefined;
export declare function getTitleBarStyle(configurationService: IConfigurationService): TitlebarStyle;
