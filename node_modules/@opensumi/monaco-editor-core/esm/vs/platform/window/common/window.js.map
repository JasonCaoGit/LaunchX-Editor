{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/platform/window/common/window.ts","vs/platform/window/common/window.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AAE/E,OAAO,OAAO,MAAM,iCAAiC,CAAC;AA8BtD,MAAM,CAAN,IAAkB,aAGjB;AAHD,WAAkB,aAAa;IAC9B,kCAAiB,CAAA;IACjB,kCAAiB,CAAA;AAClB,CAAC,EAHiB,aAAa,KAAb,aAAa,QAG9B;AAED,MAAM,CAAC,IAAI,4BAA4B,GAAyB,SAAS,CAAC;AAE1E,MAAM,UAAU,gBAAgB,CAAC,oBAA2C;IAC3E,IAAI,KAAK,EAAE,CAAC;QACX,2CAA4B;IAC7B,CAAC;IAED,MAAM,aAAa,GAAG,oBAAoB,CAAC,QAAQ,CAA8B,QAAQ,CAAC,CAAC;IAC3F,IAAI,aAAa,EAAE,CAAC;QACnB,MAAM,aAAa,GAAG,WAAW,IAAI,aAAa,CAAC,UAAU,KAAK,IAAI,CAAC;QACvE,IAAI,aAAa,EAAE,CAAC;YACnB,2CAA4B,CAAC,4DAA4D;QAC1F,CAAC;QAED,MAAM,mBAAmB,GAAG,WAAW,IAAI,aAAa,CAAC,gBAAgB,KAAK,KAAK,CAAC;QACpF,IAAI,mBAAmB,EAAE,CAAC;YACzB,2CAA4B,CAAC,kHAAkH;QAChJ,CAAC;QAED,MAAM,KAAK,GAAG,aAAa,CAAC,aAAa,CAAC;QAC1C,IAAI,KAAK,wCAAyB,IAAI,KAAK,wCAAyB,EAAE,CAAC;YACtE,OAAO,KAAK,CAAC;QACd,CAAC;IACF,CAAC;IAED,IAAI,4BAA4B,KAAK,QAAQ,EAAE,CAAC;QAC/C,2CAA4B;IAC7B,CAAC;IAED,OAAO,OAAO,IAAI,OAAO,CAAC,OAAO,KAAK,QAAQ,CAAC,CAAC,qCAAsB,CAAC,oCAAqB,CAAC,CAAC,4DAA4D;AAC3J,CAAC","file":"window.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["\nimport { isLinux, isMacintosh, isWeb } from '../../../base/common/platform.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport product from '../../product/common/product.js';\n\nexport type MenuBarVisibility = 'classic' | 'visible' | 'toggle' | 'hidden' | 'compact';\n\nexport interface IWindowSettings {\n\treadonly openFilesInNewWindow: 'on' | 'off' | 'default';\n\treadonly openFoldersInNewWindow: 'on' | 'off' | 'default';\n\treadonly openWithoutArgumentsInNewWindow: 'on' | 'off';\n\treadonly restoreWindows: 'preserve' | 'all' | 'folders' | 'one' | 'none';\n\treadonly restoreFullscreen: boolean;\n\treadonly zoomLevel: number;\n\treadonly titleBarStyle: TitlebarStyle;\n\treadonly autoDetectHighContrast: boolean;\n\treadonly autoDetectColorScheme: boolean;\n\treadonly menuBarVisibility: MenuBarVisibility;\n\treadonly newWindowDimensions: 'default' | 'inherit' | 'offset' | 'maximized' | 'fullscreen';\n\treadonly nativeTabs: boolean;\n\treadonly nativeFullScreen: boolean;\n\treadonly enableMenuBarMnemonics: boolean;\n\treadonly closeWhenEmpty: boolean;\n\treadonly clickThroughInactive: boolean;\n\treadonly newWindowProfile: string;\n\treadonly density: IDensitySettings;\n\treadonly experimentalControlOverlay?: boolean;\n}\n\nexport interface IDensitySettings {\n\treadonly editorTabHeight: 'default' | 'compact';\n}\n\nexport const enum TitlebarStyle {\n\tNATIVE = 'native',\n\tCUSTOM = 'custom',\n}\n\nexport let titlebarStyleDefaultOverride: 'custom' | undefined = undefined;\n\nexport function getTitleBarStyle(configurationService: IConfigurationService): TitlebarStyle {\n\tif (isWeb) {\n\t\treturn TitlebarStyle.CUSTOM;\n\t}\n\n\tconst configuration = configurationService.getValue<IWindowSettings | undefined>('window');\n\tif (configuration) {\n\t\tconst useNativeTabs = isMacintosh && configuration.nativeTabs === true;\n\t\tif (useNativeTabs) {\n\t\t\treturn TitlebarStyle.NATIVE; // native tabs on sierra do not work with custom title style\n\t\t}\n\n\t\tconst useSimpleFullScreen = isMacintosh && configuration.nativeFullScreen === false;\n\t\tif (useSimpleFullScreen) {\n\t\t\treturn TitlebarStyle.NATIVE; // simple fullscreen does not work well with custom title style (https://github.com/microsoft/vscode/issues/63291)\n\t\t}\n\n\t\tconst style = configuration.titleBarStyle;\n\t\tif (style === TitlebarStyle.NATIVE || style === TitlebarStyle.CUSTOM) {\n\t\t\treturn style;\n\t\t}\n\t}\n\n\tif (titlebarStyleDefaultOverride === 'custom') {\n\t\treturn TitlebarStyle.CUSTOM;\n\t}\n\n\treturn isLinux && product.quality === 'stable' ? TitlebarStyle.NATIVE : TitlebarStyle.CUSTOM; // default to custom on all OS except Linux stable (for now)\n}\n","\nimport { isLinux, isMacintosh, isWeb } from '../../../base/common/platform.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport product from '../../product/common/product.js';\n\nexport type MenuBarVisibility = 'classic' | 'visible' | 'toggle' | 'hidden' | 'compact';\n\nexport interface IWindowSettings {\n\treadonly openFilesInNewWindow: 'on' | 'off' | 'default';\n\treadonly openFoldersInNewWindow: 'on' | 'off' | 'default';\n\treadonly openWithoutArgumentsInNewWindow: 'on' | 'off';\n\treadonly restoreWindows: 'preserve' | 'all' | 'folders' | 'one' | 'none';\n\treadonly restoreFullscreen: boolean;\n\treadonly zoomLevel: number;\n\treadonly titleBarStyle: TitlebarStyle;\n\treadonly autoDetectHighContrast: boolean;\n\treadonly autoDetectColorScheme: boolean;\n\treadonly menuBarVisibility: MenuBarVisibility;\n\treadonly newWindowDimensions: 'default' | 'inherit' | 'offset' | 'maximized' | 'fullscreen';\n\treadonly nativeTabs: boolean;\n\treadonly nativeFullScreen: boolean;\n\treadonly enableMenuBarMnemonics: boolean;\n\treadonly closeWhenEmpty: boolean;\n\treadonly clickThroughInactive: boolean;\n\treadonly newWindowProfile: string;\n\treadonly density: IDensitySettings;\n\treadonly experimentalControlOverlay?: boolean;\n}\n\nexport interface IDensitySettings {\n\treadonly editorTabHeight: 'default' | 'compact';\n}\n\nexport const enum TitlebarStyle {\n\tNATIVE = 'native',\n\tCUSTOM = 'custom',\n}\n\nexport let titlebarStyleDefaultOverride: 'custom' | undefined = undefined;\n\nexport function getTitleBarStyle(configurationService: IConfigurationService): TitlebarStyle {\n\tif (isWeb) {\n\t\treturn TitlebarStyle.CUSTOM;\n\t}\n\n\tconst configuration = configurationService.getValue<IWindowSettings | undefined>('window');\n\tif (configuration) {\n\t\tconst useNativeTabs = isMacintosh && configuration.nativeTabs === true;\n\t\tif (useNativeTabs) {\n\t\t\treturn TitlebarStyle.NATIVE; // native tabs on sierra do not work with custom title style\n\t\t}\n\n\t\tconst useSimpleFullScreen = isMacintosh && configuration.nativeFullScreen === false;\n\t\tif (useSimpleFullScreen) {\n\t\t\treturn TitlebarStyle.NATIVE; // simple fullscreen does not work well with custom title style (https://github.com/microsoft/vscode/issues/63291)\n\t\t}\n\n\t\tconst style = configuration.titleBarStyle;\n\t\tif (style === TitlebarStyle.NATIVE || style === TitlebarStyle.CUSTOM) {\n\t\t\treturn style;\n\t\t}\n\t}\n\n\tif (titlebarStyleDefaultOverride === 'custom') {\n\t\treturn TitlebarStyle.CUSTOM;\n\t}\n\n\treturn isLinux && product.quality === 'stable' ? TitlebarStyle.NATIVE : TitlebarStyle.CUSTOM; // default to custom on all OS except Linux stable (for now)\n}\n"]}