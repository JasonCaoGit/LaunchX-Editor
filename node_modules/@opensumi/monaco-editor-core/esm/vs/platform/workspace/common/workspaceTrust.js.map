{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/platform/workspace/common/workspaceTrust.ts","vs/platform/workspace/common/workspaceTrust.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAKhG,OAAO,EAAE,eAAe,EAAE,MAAM,6CAA6C,CAAC;AAE9E,MAAM,CAAC,MAAM,gCAAgC,GAAG,eAAe,CAAmC,iCAAiC,CAAC,CAAC","file":"workspaceTrust.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\n\nexport const IWorkspaceTrustManagementService = createDecorator<IWorkspaceTrustManagementService>('workspaceTrustManagementService');\n\nexport interface IWorkspaceTrustManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeTrust: Event<boolean>;\n\tonDidChangeTrustedFolders: Event<void>;\n\n\treadonly workspaceResolved: Promise<void>;\n\treadonly workspaceTrustInitialized: Promise<void>;\n\tacceptsOutOfWorkspaceFiles: boolean;\n\n\tisWorkspaceTrusted(): boolean;\n\tisWorkspaceTrustForced(): boolean;\n\n\tcanSetParentFolderTrust(): boolean;\n\tsetParentFolderTrust(trusted: boolean): Promise<void>;\n\n\tcanSetWorkspaceTrust(): boolean;\n\tsetWorkspaceTrust(trusted: boolean): Promise<void>;\n\n\tgetUriTrustInfo(uri: URI): Promise<IWorkspaceTrustUriInfo>;\n\tsetUrisTrust(uri: URI[], trusted: boolean): Promise<void>;\n\n\tgetTrustedUris(): URI[];\n\tsetTrustedUris(uris: URI[]): Promise<void>;\n\n\taddWorkspaceTrustTransitionParticipant(participant: IWorkspaceTrustTransitionParticipant): IDisposable;\n}\n\nexport interface IWorkspaceTrustTransitionParticipant {\n\tparticipate(trusted: boolean): Promise<void>;\n}\n\nexport interface IWorkspaceTrustUriInfo {\n\turi: URI;\n\ttrusted: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\n\nexport const IWorkspaceTrustManagementService = createDecorator<IWorkspaceTrustManagementService>('workspaceTrustManagementService');\n\nexport interface IWorkspaceTrustManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeTrust: Event<boolean>;\n\tonDidChangeTrustedFolders: Event<void>;\n\n\treadonly workspaceResolved: Promise<void>;\n\treadonly workspaceTrustInitialized: Promise<void>;\n\tacceptsOutOfWorkspaceFiles: boolean;\n\n\tisWorkspaceTrusted(): boolean;\n\tisWorkspaceTrustForced(): boolean;\n\n\tcanSetParentFolderTrust(): boolean;\n\tsetParentFolderTrust(trusted: boolean): Promise<void>;\n\n\tcanSetWorkspaceTrust(): boolean;\n\tsetWorkspaceTrust(trusted: boolean): Promise<void>;\n\n\tgetUriTrustInfo(uri: URI): Promise<IWorkspaceTrustUriInfo>;\n\tsetUrisTrust(uri: URI[], trusted: boolean): Promise<void>;\n\n\tgetTrustedUris(): URI[];\n\tsetTrustedUris(uris: URI[]): Promise<void>;\n\n\taddWorkspaceTrustTransitionParticipant(participant: IWorkspaceTrustTransitionParticipant): IDisposable;\n}\n\nexport interface IWorkspaceTrustTransitionParticipant {\n\tparticipate(trusted: boolean): Promise<void>;\n}\n\nexport interface IWorkspaceTrustUriInfo {\n\turi: URI;\n\ttrusted: boolean;\n}\n"]}