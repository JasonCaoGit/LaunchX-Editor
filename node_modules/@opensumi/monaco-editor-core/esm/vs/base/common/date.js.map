{"version":3,"sources":["file:///Users/kw/github/monaco-editor-core/out-editor-esm/vs/base/common/date.ts","vs/base/common/date.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAEjD,MAAM,CAAC,MAAM,QAAQ,GAAG;IACvB,cAAc,CAAC,OAA8B,EAAE,OAAoC;QAClF,IAAI,CAAC;YACJ,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAClD,CAAC;QAAC,MAAM,CAAC;YACR,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACpD,CAAC;IACF,CAAC;IACD,QAAQ,CAAC,OAA8B,EAAE,OAA8B;QACtE,IAAI,CAAC;YACJ,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC5C,CAAC;QAAC,MAAM,CAAC;YACR,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC9C,CAAC;IACF,CAAC;IACD,SAAS,CAAC,OAA8B,EAAE,OAA+B;QACxE,IAAI,CAAC;YACJ,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC7C,CAAC;QAAC,MAAM,CAAC;YACR,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC/C,CAAC;IACF,CAAC;IACD,MAAM,CAAC,GAAyB,EAAE,OAA4B;QAC7D,IAAI,CAAC;YACJ,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QACtC,CAAC;QAAC,MAAM,CAAC;YACR,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QACnD,CAAC;IACF,CAAC;CACD,CAAC","file":"date.js","sourceRoot":"file:///Users/kw/github/monaco-editor-core/out-editor-esm","sourcesContent":["\nimport { LANGUAGE_DEFAULT } from './platform.js';\n\nexport const safeIntl = {\n\tDateTimeFormat(locales?: Intl.LocalesArgument, options?: Intl.DateTimeFormatOptions): Intl.DateTimeFormat {\n\t\ttry {\n\t\t\treturn new Intl.DateTimeFormat(locales, options);\n\t\t} catch {\n\t\t\treturn new Intl.DateTimeFormat(undefined, options);\n\t\t}\n\t},\n\tCollator(locales?: Intl.LocalesArgument, options?: Intl.CollatorOptions): Intl.Collator {\n\t\ttry {\n\t\t\treturn new Intl.Collator(locales, options);\n\t\t} catch {\n\t\t\treturn new Intl.Collator(undefined, options);\n\t\t}\n\t},\n\tSegmenter(locales?: Intl.LocalesArgument, options?: Intl.SegmenterOptions): Intl.Segmenter {\n\t\ttry {\n\t\t\treturn new Intl.Segmenter(locales, options);\n\t\t} catch {\n\t\t\treturn new Intl.Segmenter(undefined, options);\n\t\t}\n\t},\n\tLocale(tag: Intl.Locale | string, options?: Intl.LocaleOptions): Intl.Locale {\n\t\ttry {\n\t\t\treturn new Intl.Locale(tag, options);\n\t\t} catch {\n\t\t\treturn new Intl.Locale(LANGUAGE_DEFAULT, options);\n\t\t}\n\t}\n};\n","\nimport { LANGUAGE_DEFAULT } from './platform.js';\n\nexport const safeIntl = {\n\tDateTimeFormat(locales?: Intl.LocalesArgument, options?: Intl.DateTimeFormatOptions): Intl.DateTimeFormat {\n\t\ttry {\n\t\t\treturn new Intl.DateTimeFormat(locales, options);\n\t\t} catch {\n\t\t\treturn new Intl.DateTimeFormat(undefined, options);\n\t\t}\n\t},\n\tCollator(locales?: Intl.LocalesArgument, options?: Intl.CollatorOptions): Intl.Collator {\n\t\ttry {\n\t\t\treturn new Intl.Collator(locales, options);\n\t\t} catch {\n\t\t\treturn new Intl.Collator(undefined, options);\n\t\t}\n\t},\n\tSegmenter(locales?: Intl.LocalesArgument, options?: Intl.SegmenterOptions): Intl.Segmenter {\n\t\ttry {\n\t\t\treturn new Intl.Segmenter(locales, options);\n\t\t} catch {\n\t\t\treturn new Intl.Segmenter(undefined, options);\n\t\t}\n\t},\n\tLocale(tag: Intl.Locale | string, options?: Intl.LocaleOptions): Intl.Locale {\n\t\ttry {\n\t\t\treturn new Intl.Locale(tag, options);\n\t\t} catch {\n\t\t\treturn new Intl.Locale(LANGUAGE_DEFAULT, options);\n\t\t}\n\t}\n};\n"]}